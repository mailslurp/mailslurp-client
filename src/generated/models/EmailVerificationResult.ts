/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Email verification result. Valid means email address exists according to response from mail server running at the domain and port given.
 * @export
 * @interface EmailVerificationResult
 */
export interface EmailVerificationResult {
    /**
     * 
     * @type {string}
     * @memberof EmailVerificationResult
     */
    domainName: string;
    /**
     * 
     * @type {number}
     * @memberof EmailVerificationResult
     */
    port: number;
    /**
     * 
     * @type {string}
     * @memberof EmailVerificationResult
     */
    emailAddress: string;
    /**
     * 
     * @type {boolean}
     * @memberof EmailVerificationResult
     */
    isValid: boolean;
    /**
     * 
     * @type {string}
     * @memberof EmailVerificationResult
     */
    error?: string | null;
}

/**
 * Check if a given object implements the EmailVerificationResult interface.
 */
export function instanceOfEmailVerificationResult(value: object): value is EmailVerificationResult {
    if (!('domainName' in value) || value['domainName'] === undefined) return false;
    if (!('port' in value) || value['port'] === undefined) return false;
    if (!('emailAddress' in value) || value['emailAddress'] === undefined) return false;
    if (!('isValid' in value) || value['isValid'] === undefined) return false;
    return true;
}

export function EmailVerificationResultFromJSON(json: any): EmailVerificationResult {
    return EmailVerificationResultFromJSONTyped(json, false);
}

export function EmailVerificationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailVerificationResult {
    if (json == null) {
        return json;
    }
    return {
        
        'domainName': json['domainName'],
        'port': json['port'],
        'emailAddress': json['emailAddress'],
        'isValid': json['isValid'],
        'error': json['error'] == null ? undefined : json['error'],
    };
}

export function EmailVerificationResultToJSON(json: any): EmailVerificationResult {
    return EmailVerificationResultToJSONTyped(json, false);
}

export function EmailVerificationResultToJSONTyped(value?: EmailVerificationResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'domainName': value['domainName'],
        'port': value['port'],
        'emailAddress': value['emailAddress'],
        'isValid': value['isValid'],
        'error': value['error'],
    };
}

