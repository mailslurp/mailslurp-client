/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Result of search for inbox by name
 * @export
 * @interface InboxByNameResult
 */
export interface InboxByNameResult {
    /**
     * 
     * @type {string}
     * @memberof InboxByNameResult
     */
    inboxId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof InboxByNameResult
     */
    _exists: boolean;
}

/**
 * Check if a given object implements the InboxByNameResult interface.
 */
export function instanceOfInboxByNameResult(value: object): value is InboxByNameResult {
    if (!('_exists' in value) || value['_exists'] === undefined) return false;
    return true;
}

export function InboxByNameResultFromJSON(json: any): InboxByNameResult {
    return InboxByNameResultFromJSONTyped(json, false);
}

export function InboxByNameResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): InboxByNameResult {
    if (json == null) {
        return json;
    }
    return {
        
        'inboxId': json['inboxId'] == null ? undefined : json['inboxId'],
        '_exists': json['exists'],
    };
}

export function InboxByNameResultToJSON(json: any): InboxByNameResult {
    return InboxByNameResultToJSONTyped(json, false);
}

export function InboxByNameResultToJSONTyped(value?: InboxByNameResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'inboxId': value['inboxId'],
        'exists': value['_exists'],
    };
}

