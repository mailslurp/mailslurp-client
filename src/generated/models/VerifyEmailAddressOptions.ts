/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Options for verifying that an email address exists at a remote mail server.
 * @export
 * @interface VerifyEmailAddressOptions
 */
export interface VerifyEmailAddressOptions {
  /**
   *
   * @type {string}
   * @memberof VerifyEmailAddressOptions
   */
  mailServerDomain?: string | null;
  /**
   *
   * @type {string}
   * @memberof VerifyEmailAddressOptions
   */
  emailAddress: string;
  /**
   *
   * @type {string}
   * @memberof VerifyEmailAddressOptions
   */
  senderEmailAddress?: string | null;
  /**
   *
   * @type {number}
   * @memberof VerifyEmailAddressOptions
   */
  port?: number | null;
}

export function VerifyEmailAddressOptionsFromJSON(
  json: any
): VerifyEmailAddressOptions {
  return VerifyEmailAddressOptionsFromJSONTyped(json, false);
}

export function VerifyEmailAddressOptionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): VerifyEmailAddressOptions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    mailServerDomain: !exists(json, 'mailServerDomain')
      ? undefined
      : json['mailServerDomain'],
    emailAddress: json['emailAddress'],
    senderEmailAddress: !exists(json, 'senderEmailAddress')
      ? undefined
      : json['senderEmailAddress'],
    port: !exists(json, 'port') ? undefined : json['port'],
  };
}

export function VerifyEmailAddressOptionsToJSON(
  value?: VerifyEmailAddressOptions | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    mailServerDomain: value.mailServerDomain,
    emailAddress: value.emailAddress,
    senderEmailAddress: value.senderEmailAddress,
    port: value.port,
  };
}
