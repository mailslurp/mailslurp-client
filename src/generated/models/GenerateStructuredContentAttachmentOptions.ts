/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  StructuredOutputSchema,
  StructuredOutputSchemaFromJSON,
  StructuredOutputSchemaFromJSONTyped,
  StructuredOutputSchemaToJSON,
} from './';

/**
 * Options for generating structured content output from an attachment
 * @export
 * @interface GenerateStructuredContentAttachmentOptions
 */
export interface GenerateStructuredContentAttachmentOptions {
  /**
   * Attachment ID to read and pass to AI
   * @type {string}
   * @memberof GenerateStructuredContentAttachmentOptions
   */
  attachmentId: string;
  /**
   * Optional instructions for the AI to follow. Try to be precise and clear. You can include examples and hints.
   * @type {string}
   * @memberof GenerateStructuredContentAttachmentOptions
   */
  instructions?: string;
  /**
   *
   * @type {StructuredOutputSchema}
   * @memberof GenerateStructuredContentAttachmentOptions
   */
  outputSchema: StructuredOutputSchema;
}

export function GenerateStructuredContentAttachmentOptionsFromJSON(
  json: any
): GenerateStructuredContentAttachmentOptions {
  return GenerateStructuredContentAttachmentOptionsFromJSONTyped(json, false);
}

export function GenerateStructuredContentAttachmentOptionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GenerateStructuredContentAttachmentOptions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    attachmentId: json['attachmentId'],
    instructions: !exists(json, 'instructions')
      ? undefined
      : json['instructions'],
    outputSchema: StructuredOutputSchemaFromJSON(json['outputSchema']),
  };
}

export function GenerateStructuredContentAttachmentOptionsToJSON(
  value?: GenerateStructuredContentAttachmentOptions | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    attachmentId: value.attachmentId,
    instructions: value.instructions,
    outputSchema: StructuredOutputSchemaToJSON(value.outputSchema),
  };
}
