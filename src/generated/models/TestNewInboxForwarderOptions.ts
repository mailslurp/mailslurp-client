/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateInboxForwarderOptions } from './CreateInboxForwarderOptions';
import {
    CreateInboxForwarderOptionsFromJSON,
    CreateInboxForwarderOptionsFromJSONTyped,
    CreateInboxForwarderOptionsToJSON,
    CreateInboxForwarderOptionsToJSONTyped,
} from './CreateInboxForwarderOptions';
import type { InboxForwarderTestOptions } from './InboxForwarderTestOptions';
import {
    InboxForwarderTestOptionsFromJSON,
    InboxForwarderTestOptionsFromJSONTyped,
    InboxForwarderTestOptionsToJSON,
    InboxForwarderTestOptionsToJSONTyped,
} from './InboxForwarderTestOptions';

/**
 * Options for testing new inbox forwarder rules
 * @export
 * @interface TestNewInboxForwarderOptions
 */
export interface TestNewInboxForwarderOptions {
    /**
     * 
     * @type {InboxForwarderTestOptions}
     * @memberof TestNewInboxForwarderOptions
     */
    inboxForwarderTestOptions: InboxForwarderTestOptions;
    /**
     * 
     * @type {CreateInboxForwarderOptions}
     * @memberof TestNewInboxForwarderOptions
     */
    createInboxForwarderOptions: CreateInboxForwarderOptions;
}

/**
 * Check if a given object implements the TestNewInboxForwarderOptions interface.
 */
export function instanceOfTestNewInboxForwarderOptions(value: object): value is TestNewInboxForwarderOptions {
    if (!('inboxForwarderTestOptions' in value) || value['inboxForwarderTestOptions'] === undefined) return false;
    if (!('createInboxForwarderOptions' in value) || value['createInboxForwarderOptions'] === undefined) return false;
    return true;
}

export function TestNewInboxForwarderOptionsFromJSON(json: any): TestNewInboxForwarderOptions {
    return TestNewInboxForwarderOptionsFromJSONTyped(json, false);
}

export function TestNewInboxForwarderOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestNewInboxForwarderOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'inboxForwarderTestOptions': InboxForwarderTestOptionsFromJSON(json['inboxForwarderTestOptions']),
        'createInboxForwarderOptions': CreateInboxForwarderOptionsFromJSON(json['createInboxForwarderOptions']),
    };
}

export function TestNewInboxForwarderOptionsToJSON(json: any): TestNewInboxForwarderOptions {
    return TestNewInboxForwarderOptionsToJSONTyped(json, false);
}

export function TestNewInboxForwarderOptionsToJSONTyped(value?: TestNewInboxForwarderOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'inboxForwarderTestOptions': InboxForwarderTestOptionsToJSON(value['inboxForwarderTestOptions']),
        'createInboxForwarderOptions': CreateInboxForwarderOptionsToJSON(value['createInboxForwarderOptions']),
    };
}

