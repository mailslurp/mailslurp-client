/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LookupMtaStsDomainOptions
 */
export interface LookupMtaStsDomainOptions {
    /**
     * 
     * @type {string}
     * @memberof LookupMtaStsDomainOptions
     */
    host: string;
}

/**
 * Check if a given object implements the LookupMtaStsDomainOptions interface.
 */
export function instanceOfLookupMtaStsDomainOptions(value: object): value is LookupMtaStsDomainOptions {
    if (!('host' in value) || value['host'] === undefined) return false;
    return true;
}

export function LookupMtaStsDomainOptionsFromJSON(json: any): LookupMtaStsDomainOptions {
    return LookupMtaStsDomainOptionsFromJSONTyped(json, false);
}

export function LookupMtaStsDomainOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LookupMtaStsDomainOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'host': json['host'],
    };
}

export function LookupMtaStsDomainOptionsToJSON(json: any): LookupMtaStsDomainOptions {
    return LookupMtaStsDomainOptionsToJSONTyped(json, false);
}

export function LookupMtaStsDomainOptionsToJSONTyped(value?: LookupMtaStsDomainOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'host': value['host'],
    };
}

