/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Name value pair for webhook header
 * @export
 * @interface WebhookHeaderNameValue
 */
export interface WebhookHeaderNameValue {
    /**
     * Name of header
     * @type {string}
     * @memberof WebhookHeaderNameValue
     */
    name: string;
    /**
     * Value of header
     * @type {string}
     * @memberof WebhookHeaderNameValue
     */
    value: string;
}

/**
 * Check if a given object implements the WebhookHeaderNameValue interface.
 */
export function instanceOfWebhookHeaderNameValue(value: object): value is WebhookHeaderNameValue {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function WebhookHeaderNameValueFromJSON(json: any): WebhookHeaderNameValue {
    return WebhookHeaderNameValueFromJSONTyped(json, false);
}

export function WebhookHeaderNameValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookHeaderNameValue {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'value': json['value'],
    };
}

export function WebhookHeaderNameValueToJSON(json: any): WebhookHeaderNameValue {
    return WebhookHeaderNameValueToJSONTyped(json, false);
}

export function WebhookHeaderNameValueToJSONTyped(value?: WebhookHeaderNameValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'value': value['value'],
    };
}

