/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  EmailRecipients,
  EmailRecipientsFromJSON,
  EmailRecipientsFromJSONTyped,
  EmailRecipientsToJSON,
  Sender,
  SenderFromJSON,
  SenderFromJSONTyped,
  SenderToJSON,
} from './';

/**
 *
 * @export
 * @interface FakeEmailDto
 */
export interface FakeEmailDto {
  /**
   *
   * @type {string}
   * @memberof FakeEmailDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof FakeEmailDto
   */
  emailAddress: string;
  /**
   *
   * @type {Sender}
   * @memberof FakeEmailDto
   */
  sender?: Sender | null;
  /**
   *
   * @type {EmailRecipients}
   * @memberof FakeEmailDto
   */
  recipients?: EmailRecipients | null;
  /**
   *
   * @type {string}
   * @memberof FakeEmailDto
   */
  subject?: string;
  /**
   *
   * @type {string}
   * @memberof FakeEmailDto
   */
  preview?: string;
  /**
   *
   * @type {string}
   * @memberof FakeEmailDto
   */
  body: string;
  /**
   *
   * @type {boolean}
   * @memberof FakeEmailDto
   */
  seen: boolean;
  /**
   *
   * @type {Date}
   * @memberof FakeEmailDto
   */
  createdAt: Date;
}

export function FakeEmailDtoFromJSON(json: any): FakeEmailDto {
  return FakeEmailDtoFromJSONTyped(json, false);
}

export function FakeEmailDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FakeEmailDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    emailAddress: json['emailAddress'],
    sender: !exists(json, 'sender')
      ? undefined
      : SenderFromJSON(json['sender']),
    recipients: !exists(json, 'recipients')
      ? undefined
      : EmailRecipientsFromJSON(json['recipients']),
    subject: !exists(json, 'subject') ? undefined : json['subject'],
    preview: !exists(json, 'preview') ? undefined : json['preview'],
    body: json['body'],
    seen: json['seen'],
    createdAt: new Date(json['createdAt']),
  };
}

export function FakeEmailDtoToJSON(value?: FakeEmailDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    emailAddress: value.emailAddress,
    sender: SenderToJSON(value.sender),
    recipients: EmailRecipientsToJSON(value.recipients),
    subject: value.subject,
    preview: value.preview,
    body: value.body,
    seen: value.seen,
    createdAt: value.createdAt.toISOString(),
  };
}
