/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Last sender object
 * @export
 * @interface SenderProjection
 */
export interface SenderProjection {
    /**
     * 
     * @type {string}
     * @memberof SenderProjection
     */
    emailAddress: string;
    /**
     * 
     * @type {string}
     * @memberof SenderProjection
     */
    rawValue: string;
    /**
     * 
     * @type {string}
     * @memberof SenderProjection
     */
    name?: string;
}

/**
 * Check if a given object implements the SenderProjection interface.
 */
export function instanceOfSenderProjection(value: object): value is SenderProjection {
    if (!('emailAddress' in value) || value['emailAddress'] === undefined) return false;
    if (!('rawValue' in value) || value['rawValue'] === undefined) return false;
    return true;
}

export function SenderProjectionFromJSON(json: any): SenderProjection {
    return SenderProjectionFromJSONTyped(json, false);
}

export function SenderProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SenderProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'emailAddress': json['emailAddress'],
        'rawValue': json['rawValue'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function SenderProjectionToJSON(json: any): SenderProjection {
    return SenderProjectionToJSONTyped(json, false);
}

export function SenderProjectionToJSONTyped(value?: SenderProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'emailAddress': value['emailAddress'],
        'rawValue': value['rawValue'],
        'name': value['name'],
    };
}

