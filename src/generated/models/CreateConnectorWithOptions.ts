/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateConnectorOptions } from './CreateConnectorOptions';
import {
    CreateConnectorOptionsFromJSON,
    CreateConnectorOptionsFromJSONTyped,
    CreateConnectorOptionsToJSON,
    CreateConnectorOptionsToJSONTyped,
} from './CreateConnectorOptions';
import type { CreateConnectorSyncSettingsOptions } from './CreateConnectorSyncSettingsOptions';
import {
    CreateConnectorSyncSettingsOptionsFromJSON,
    CreateConnectorSyncSettingsOptionsFromJSONTyped,
    CreateConnectorSyncSettingsOptionsToJSON,
    CreateConnectorSyncSettingsOptionsToJSONTyped,
} from './CreateConnectorSyncSettingsOptions';
import type { CreateConnectorImapConnectionOptions } from './CreateConnectorImapConnectionOptions';
import {
    CreateConnectorImapConnectionOptionsFromJSON,
    CreateConnectorImapConnectionOptionsFromJSONTyped,
    CreateConnectorImapConnectionOptionsToJSON,
    CreateConnectorImapConnectionOptionsToJSONTyped,
} from './CreateConnectorImapConnectionOptions';
import type { CreateConnectorSmtpConnectionOptions } from './CreateConnectorSmtpConnectionOptions';
import {
    CreateConnectorSmtpConnectionOptionsFromJSON,
    CreateConnectorSmtpConnectionOptionsFromJSONTyped,
    CreateConnectorSmtpConnectionOptionsToJSON,
    CreateConnectorSmtpConnectionOptionsToJSONTyped,
} from './CreateConnectorSmtpConnectionOptions';

/**
 * Options for creating an inbox connection with an external mail provider including extra settings
 * @export
 * @interface CreateConnectorWithOptions
 */
export interface CreateConnectorWithOptions {
    /**
     * 
     * @type {CreateConnectorOptions}
     * @memberof CreateConnectorWithOptions
     */
    createConnectorOptions: CreateConnectorOptions;
    /**
     * 
     * @type {CreateConnectorImapConnectionOptions}
     * @memberof CreateConnectorWithOptions
     */
    createConnectorImapConnectionOptions?: CreateConnectorImapConnectionOptions;
    /**
     * 
     * @type {CreateConnectorSmtpConnectionOptions}
     * @memberof CreateConnectorWithOptions
     */
    createConnectorSmtpConnectionOptions?: CreateConnectorSmtpConnectionOptions;
    /**
     * 
     * @type {CreateConnectorSyncSettingsOptions}
     * @memberof CreateConnectorWithOptions
     */
    createConnectorSyncSettingsOptions?: CreateConnectorSyncSettingsOptions;
}

/**
 * Check if a given object implements the CreateConnectorWithOptions interface.
 */
export function instanceOfCreateConnectorWithOptions(value: object): value is CreateConnectorWithOptions {
    if (!('createConnectorOptions' in value) || value['createConnectorOptions'] === undefined) return false;
    return true;
}

export function CreateConnectorWithOptionsFromJSON(json: any): CreateConnectorWithOptions {
    return CreateConnectorWithOptionsFromJSONTyped(json, false);
}

export function CreateConnectorWithOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateConnectorWithOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'createConnectorOptions': CreateConnectorOptionsFromJSON(json['createConnectorOptions']),
        'createConnectorImapConnectionOptions': json['createConnectorImapConnectionOptions'] == null ? undefined : CreateConnectorImapConnectionOptionsFromJSON(json['createConnectorImapConnectionOptions']),
        'createConnectorSmtpConnectionOptions': json['createConnectorSmtpConnectionOptions'] == null ? undefined : CreateConnectorSmtpConnectionOptionsFromJSON(json['createConnectorSmtpConnectionOptions']),
        'createConnectorSyncSettingsOptions': json['createConnectorSyncSettingsOptions'] == null ? undefined : CreateConnectorSyncSettingsOptionsFromJSON(json['createConnectorSyncSettingsOptions']),
    };
}

export function CreateConnectorWithOptionsToJSON(json: any): CreateConnectorWithOptions {
    return CreateConnectorWithOptionsToJSONTyped(json, false);
}

export function CreateConnectorWithOptionsToJSONTyped(value?: CreateConnectorWithOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createConnectorOptions': CreateConnectorOptionsToJSON(value['createConnectorOptions']),
        'createConnectorImapConnectionOptions': CreateConnectorImapConnectionOptionsToJSON(value['createConnectorImapConnectionOptions']),
        'createConnectorSmtpConnectionOptions': CreateConnectorSmtpConnectionOptionsToJSON(value['createConnectorSmtpConnectionOptions']),
        'createConnectorSyncSettingsOptions': CreateConnectorSyncSettingsOptionsToJSON(value['createConnectorSyncSettingsOptions']),
    };
}

