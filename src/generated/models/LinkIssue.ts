/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LinkIssue
 */
export interface LinkIssue {
    /**
     * 
     * @type {string}
     * @memberof LinkIssue
     */
    url: string;
    /**
     * 
     * @type {number}
     * @memberof LinkIssue
     */
    responseStatus?: number;
    /**
     * 
     * @type {string}
     * @memberof LinkIssue
     */
    severity: LinkIssueSeverityEnum;
    /**
     * 
     * @type {string}
     * @memberof LinkIssue
     */
    message: string;
}


/**
 * @export
 */
export const LinkIssueSeverityEnum = {
    Warning: 'Warning',
    Error: 'Error'
} as const;
export type LinkIssueSeverityEnum = typeof LinkIssueSeverityEnum[keyof typeof LinkIssueSeverityEnum];


/**
 * Check if a given object implements the LinkIssue interface.
 */
export function instanceOfLinkIssue(value: object): value is LinkIssue {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function LinkIssueFromJSON(json: any): LinkIssue {
    return LinkIssueFromJSONTyped(json, false);
}

export function LinkIssueFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkIssue {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'responseStatus': json['responseStatus'] == null ? undefined : json['responseStatus'],
        'severity': json['severity'],
        'message': json['message'],
    };
}

export function LinkIssueToJSON(json: any): LinkIssue {
    return LinkIssueToJSONTyped(json, false);
}

export function LinkIssueToJSONTyped(value?: LinkIssue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'responseStatus': value['responseStatus'],
        'severity': value['severity'],
        'message': value['message'],
    };
}

