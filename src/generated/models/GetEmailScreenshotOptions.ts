/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Options taking a screenshot capture of a rendered email
 * @export
 * @interface GetEmailScreenshotOptions
 */
export interface GetEmailScreenshotOptions {
    /**
     * Window height in pixels
     * @type {number}
     * @memberof GetEmailScreenshotOptions
     */
    height?: number | null;
    /**
     * Window width in pixels
     * @type {number}
     * @memberof GetEmailScreenshotOptions
     */
    width?: number | null;
}

/**
 * Check if a given object implements the GetEmailScreenshotOptions interface.
 */
export function instanceOfGetEmailScreenshotOptions(value: object): value is GetEmailScreenshotOptions {
    return true;
}

export function GetEmailScreenshotOptionsFromJSON(json: any): GetEmailScreenshotOptions {
    return GetEmailScreenshotOptionsFromJSONTyped(json, false);
}

export function GetEmailScreenshotOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetEmailScreenshotOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'height': json['height'] == null ? undefined : json['height'],
        'width': json['width'] == null ? undefined : json['width'],
    };
}

export function GetEmailScreenshotOptionsToJSON(json: any): GetEmailScreenshotOptions {
    return GetEmailScreenshotOptionsToJSONTyped(json, false);
}

export function GetEmailScreenshotOptionsToJSONTyped(value?: GetEmailScreenshotOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'height': value['height'],
        'width': value['width'],
    };
}

