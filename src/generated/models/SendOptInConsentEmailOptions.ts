/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface SendOptInConsentEmailOptions
 */
export interface SendOptInConsentEmailOptions {
  /**
   *
   * @type {string}
   * @memberof SendOptInConsentEmailOptions
   */
  templateHtml: string;
  /**
   *
   * @type {string}
   * @memberof SendOptInConsentEmailOptions
   */
  subject: string;
  /**
   *
   * @type {string}
   * @memberof SendOptInConsentEmailOptions
   */
  senderInbox?: string;
}

export function SendOptInConsentEmailOptionsFromJSON(
  json: any
): SendOptInConsentEmailOptions {
  return SendOptInConsentEmailOptionsFromJSONTyped(json, false);
}

export function SendOptInConsentEmailOptionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SendOptInConsentEmailOptions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    templateHtml: json['templateHtml'],
    subject: json['subject'],
    senderInbox: !exists(json, 'senderInbox') ? undefined : json['senderInbox'],
  };
}

export function SendOptInConsentEmailOptionsToJSON(
  value?: SendOptInConsentEmailOptions | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    templateHtml: value.templateHtml,
    subject: value.subject,
    senderInbox: value.senderInbox,
  };
}
