/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response from webhook test request
 * @export
 * @interface WebhookTestResponse
 */
export interface WebhookTestResponse {
    /**
     * 
     * @type {number}
     * @memberof WebhookTestResponse
     */
    statusCode?: number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookTestResponse
     */
    message?: string | null;
}

/**
 * Check if a given object implements the WebhookTestResponse interface.
 */
export function instanceOfWebhookTestResponse(value: object): value is WebhookTestResponse {
    return true;
}

export function WebhookTestResponseFromJSON(json: any): WebhookTestResponse {
    return WebhookTestResponseFromJSONTyped(json, false);
}

export function WebhookTestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookTestResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'statusCode': json['statusCode'] == null ? undefined : json['statusCode'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function WebhookTestResponseToJSON(json: any): WebhookTestResponse {
    return WebhookTestResponseToJSONTyped(json, false);
}

export function WebhookTestResponseToJSONTyped(value?: WebhookTestResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'statusCode': value['statusCode'],
        'message': value['message'],
    };
}

