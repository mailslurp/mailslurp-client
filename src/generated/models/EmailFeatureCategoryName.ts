/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailFeatureCategoryName
 */
export interface EmailFeatureCategoryName {
    /**
     * 
     * @type {string}
     * @memberof EmailFeatureCategoryName
     */
    slug: EmailFeatureCategoryNameSlugEnum;
    /**
     * 
     * @type {string}
     * @memberof EmailFeatureCategoryName
     */
    name: string;
}


/**
 * @export
 */
export const EmailFeatureCategoryNameSlugEnum = {
    css: 'css',
    html: 'html',
    image: 'image',
    others: 'others'
} as const;
export type EmailFeatureCategoryNameSlugEnum = typeof EmailFeatureCategoryNameSlugEnum[keyof typeof EmailFeatureCategoryNameSlugEnum];


/**
 * Check if a given object implements the EmailFeatureCategoryName interface.
 */
export function instanceOfEmailFeatureCategoryName(value: object): value is EmailFeatureCategoryName {
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function EmailFeatureCategoryNameFromJSON(json: any): EmailFeatureCategoryName {
    return EmailFeatureCategoryNameFromJSONTyped(json, false);
}

export function EmailFeatureCategoryNameFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailFeatureCategoryName {
    if (json == null) {
        return json;
    }
    return {
        
        'slug': json['slug'],
        'name': json['name'],
    };
}

export function EmailFeatureCategoryNameToJSON(json: any): EmailFeatureCategoryName {
    return EmailFeatureCategoryNameToJSONTyped(json, false);
}

export function EmailFeatureCategoryNameToJSONTyped(value?: EmailFeatureCategoryName | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'slug': value['slug'],
        'name': value['name'],
    };
}

