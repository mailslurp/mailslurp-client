/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LookupDmarcDomainOptions
 */
export interface LookupDmarcDomainOptions {
    /**
     * 
     * @type {string}
     * @memberof LookupDmarcDomainOptions
     */
    host: string;
}

/**
 * Check if a given object implements the LookupDmarcDomainOptions interface.
 */
export function instanceOfLookupDmarcDomainOptions(value: object): value is LookupDmarcDomainOptions {
    if (!('host' in value) || value['host'] === undefined) return false;
    return true;
}

export function LookupDmarcDomainOptionsFromJSON(json: any): LookupDmarcDomainOptions {
    return LookupDmarcDomainOptionsFromJSONTyped(json, false);
}

export function LookupDmarcDomainOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LookupDmarcDomainOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'host': json['host'],
    };
}

export function LookupDmarcDomainOptionsToJSON(json: any): LookupDmarcDomainOptions {
    return LookupDmarcDomainOptionsToJSONTyped(json, false);
}

export function LookupDmarcDomainOptionsToJSONTyped(value?: LookupDmarcDomainOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'host': value['host'],
    };
}

