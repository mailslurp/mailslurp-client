/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookHeaderNameValue } from './WebhookHeaderNameValue';
import {
    WebhookHeaderNameValueFromJSON,
    WebhookHeaderNameValueFromJSONTyped,
    WebhookHeaderNameValueToJSON,
    WebhookHeaderNameValueToJSONTyped,
} from './WebhookHeaderNameValue';

/**
 * Webhook HTTP headers to include with each request from MailSlurp to your server
 * @export
 * @interface WebhookHeaders
 */
export interface WebhookHeaders {
    /**
     * List of header name value pairs to include with webhook requests
     * @type {Array<WebhookHeaderNameValue>}
     * @memberof WebhookHeaders
     */
    headers: Array<WebhookHeaderNameValue>;
}

/**
 * Check if a given object implements the WebhookHeaders interface.
 */
export function instanceOfWebhookHeaders(value: object): value is WebhookHeaders {
    if (!('headers' in value) || value['headers'] === undefined) return false;
    return true;
}

export function WebhookHeadersFromJSON(json: any): WebhookHeaders {
    return WebhookHeadersFromJSONTyped(json, false);
}

export function WebhookHeadersFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookHeaders {
    if (json == null) {
        return json;
    }
    return {
        
        'headers': ((json['headers'] as Array<any>).map(WebhookHeaderNameValueFromJSON)),
    };
}

export function WebhookHeadersToJSON(json: any): WebhookHeaders {
    return WebhookHeadersToJSONTyped(json, false);
}

export function WebhookHeadersToJSONTyped(value?: WebhookHeaders | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'headers': ((value['headers'] as Array<any>).map(WebhookHeaderNameValueToJSON)),
    };
}

