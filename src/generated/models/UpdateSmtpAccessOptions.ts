/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Edit access details for inbox using SMTP
 * @export
 * @interface UpdateSmtpAccessOptions
 */
export interface UpdateSmtpAccessOptions {
    /**
     * SMTP username for login
     * @type {string}
     * @memberof UpdateSmtpAccessOptions
     */
    smtpUsername?: string | null;
    /**
     * SMTP password for login
     * @type {string}
     * @memberof UpdateSmtpAccessOptions
     */
    smtpPassword?: string | null;
}

/**
 * Check if a given object implements the UpdateSmtpAccessOptions interface.
 */
export function instanceOfUpdateSmtpAccessOptions(value: object): value is UpdateSmtpAccessOptions {
    return true;
}

export function UpdateSmtpAccessOptionsFromJSON(json: any): UpdateSmtpAccessOptions {
    return UpdateSmtpAccessOptionsFromJSONTyped(json, false);
}

export function UpdateSmtpAccessOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSmtpAccessOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'smtpUsername': json['smtpUsername'] == null ? undefined : json['smtpUsername'],
        'smtpPassword': json['smtpPassword'] == null ? undefined : json['smtpPassword'],
    };
}

export function UpdateSmtpAccessOptionsToJSON(json: any): UpdateSmtpAccessOptions {
    return UpdateSmtpAccessOptionsToJSONTyped(json, false);
}

export function UpdateSmtpAccessOptionsToJSONTyped(value?: UpdateSmtpAccessOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'smtpUsername': value['smtpUsername'],
        'smtpPassword': value['smtpPassword'],
    };
}

