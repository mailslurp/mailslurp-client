/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecipientProjection
 */
export interface RecipientProjection {
    /**
     * 
     * @type {string}
     * @memberof RecipientProjection
     */
    emailAddress: string;
    /**
     * 
     * @type {string}
     * @memberof RecipientProjection
     */
    rawValue: string;
    /**
     * 
     * @type {string}
     * @memberof RecipientProjection
     */
    name?: string;
}

/**
 * Check if a given object implements the RecipientProjection interface.
 */
export function instanceOfRecipientProjection(value: object): value is RecipientProjection {
    if (!('emailAddress' in value) || value['emailAddress'] === undefined) return false;
    if (!('rawValue' in value) || value['rawValue'] === undefined) return false;
    return true;
}

export function RecipientProjectionFromJSON(json: any): RecipientProjection {
    return RecipientProjectionFromJSONTyped(json, false);
}

export function RecipientProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipientProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'emailAddress': json['emailAddress'],
        'rawValue': json['rawValue'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function RecipientProjectionToJSON(json: any): RecipientProjection {
    return RecipientProjectionToJSONTyped(json, false);
}

export function RecipientProjectionToJSONTyped(value?: RecipientProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'emailAddress': value['emailAddress'],
        'rawValue': value['rawValue'],
        'name': value['name'],
    };
}

