/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConnectorSyncResult
 */
export interface ConnectorSyncResult {
    /**
     * 
     * @type {number}
     * @memberof ConnectorSyncResult
     */
    emailSyncCount: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ConnectorSyncResult
     */
    logs?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ConnectorSyncResult
     */
    emailIds?: Array<string>;
}

/**
 * Check if a given object implements the ConnectorSyncResult interface.
 */
export function instanceOfConnectorSyncResult(value: object): value is ConnectorSyncResult {
    if (!('emailSyncCount' in value) || value['emailSyncCount'] === undefined) return false;
    return true;
}

export function ConnectorSyncResultFromJSON(json: any): ConnectorSyncResult {
    return ConnectorSyncResultFromJSONTyped(json, false);
}

export function ConnectorSyncResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectorSyncResult {
    if (json == null) {
        return json;
    }
    return {
        
        'emailSyncCount': json['emailSyncCount'],
        'logs': json['logs'] == null ? undefined : json['logs'],
        'emailIds': json['emailIds'] == null ? undefined : json['emailIds'],
    };
}

export function ConnectorSyncResultToJSON(json: any): ConnectorSyncResult {
    return ConnectorSyncResultToJSONTyped(json, false);
}

export function ConnectorSyncResultToJSONTyped(value?: ConnectorSyncResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'emailSyncCount': value['emailSyncCount'],
        'logs': value['logs'],
        'emailIds': value['emailIds'],
    };
}

