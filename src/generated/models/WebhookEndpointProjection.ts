/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookEndpointProjection
 */
export interface WebhookEndpointProjection {
    /**
     * 
     * @type {string}
     * @memberof WebhookEndpointProjection
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookEndpointProjection
     */
    health: WebhookEndpointProjectionHealthEnum;
}


/**
 * @export
 */
export const WebhookEndpointProjectionHealthEnum = {
    HEALTHY: 'HEALTHY',
    UNHEALTHY: 'UNHEALTHY'
} as const;
export type WebhookEndpointProjectionHealthEnum = typeof WebhookEndpointProjectionHealthEnum[keyof typeof WebhookEndpointProjectionHealthEnum];


/**
 * Check if a given object implements the WebhookEndpointProjection interface.
 */
export function instanceOfWebhookEndpointProjection(value: object): value is WebhookEndpointProjection {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('health' in value) || value['health'] === undefined) return false;
    return true;
}

export function WebhookEndpointProjectionFromJSON(json: any): WebhookEndpointProjection {
    return WebhookEndpointProjectionFromJSONTyped(json, false);
}

export function WebhookEndpointProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookEndpointProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'health': json['health'],
    };
}

export function WebhookEndpointProjectionToJSON(json: any): WebhookEndpointProjection {
    return WebhookEndpointProjectionToJSONTyped(json, false);
}

export function WebhookEndpointProjectionToJSONTyped(value?: WebhookEndpointProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'health': value['health'],
    };
}

