/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PageableObject } from './PageableObject';
import {
    PageableObjectFromJSON,
    PageableObjectFromJSONTyped,
    PageableObjectToJSON,
    PageableObjectToJSONTyped,
} from './PageableObject';
import type { SortObject } from './SortObject';
import {
    SortObjectFromJSON,
    SortObjectFromJSONTyped,
    SortObjectToJSON,
    SortObjectToJSONTyped,
} from './SortObject';
import type { MissedEmailProjection } from './MissedEmailProjection';
import {
    MissedEmailProjectionFromJSON,
    MissedEmailProjectionFromJSONTyped,
    MissedEmailProjectionToJSON,
    MissedEmailProjectionToJSONTyped,
} from './MissedEmailProjection';

/**
 * Paginated MissedEmail results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls.
 * @export
 * @interface PageMissedEmailProjection
 */
export interface PageMissedEmailProjection {
    /**
     * 
     * @type {Array<MissedEmailProjection>}
     * @memberof PageMissedEmailProjection
     */
    content?: Array<MissedEmailProjection>;
    /**
     * 
     * @type {PageableObject}
     * @memberof PageMissedEmailProjection
     */
    pageable?: PageableObject;
    /**
     * 
     * @type {number}
     * @memberof PageMissedEmailProjection
     */
    totalPages: number;
    /**
     * 
     * @type {number}
     * @memberof PageMissedEmailProjection
     */
    totalElements: number;
    /**
     * 
     * @type {boolean}
     * @memberof PageMissedEmailProjection
     */
    last?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PageMissedEmailProjection
     */
    numberOfElements?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PageMissedEmailProjection
     */
    first?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PageMissedEmailProjection
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof PageMissedEmailProjection
     */
    number?: number;
    /**
     * 
     * @type {Array<SortObject>}
     * @memberof PageMissedEmailProjection
     */
    sort?: Array<SortObject>;
    /**
     * 
     * @type {boolean}
     * @memberof PageMissedEmailProjection
     */
    empty?: boolean;
}

/**
 * Check if a given object implements the PageMissedEmailProjection interface.
 */
export function instanceOfPageMissedEmailProjection(value: object): value is PageMissedEmailProjection {
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('totalElements' in value) || value['totalElements'] === undefined) return false;
    return true;
}

export function PageMissedEmailProjectionFromJSON(json: any): PageMissedEmailProjection {
    return PageMissedEmailProjectionFromJSONTyped(json, false);
}

export function PageMissedEmailProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageMissedEmailProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(MissedEmailProjectionFromJSON)),
        'pageable': json['pageable'] == null ? undefined : PageableObjectFromJSON(json['pageable']),
        'totalPages': json['totalPages'],
        'totalElements': json['totalElements'],
        'last': json['last'] == null ? undefined : json['last'],
        'numberOfElements': json['numberOfElements'] == null ? undefined : json['numberOfElements'],
        'first': json['first'] == null ? undefined : json['first'],
        'size': json['size'] == null ? undefined : json['size'],
        'number': json['number'] == null ? undefined : json['number'],
        'sort': json['sort'] == null ? undefined : ((json['sort'] as Array<any>).map(SortObjectFromJSON)),
        'empty': json['empty'] == null ? undefined : json['empty'],
    };
}

export function PageMissedEmailProjectionToJSON(json: any): PageMissedEmailProjection {
    return PageMissedEmailProjectionToJSONTyped(json, false);
}

export function PageMissedEmailProjectionToJSONTyped(value?: PageMissedEmailProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(MissedEmailProjectionToJSON)),
        'pageable': PageableObjectToJSON(value['pageable']),
        'totalPages': value['totalPages'],
        'totalElements': value['totalElements'],
        'last': value['last'],
        'numberOfElements': value['numberOfElements'],
        'first': value['first'],
        'size': value['size'],
        'number': value['number'],
        'sort': value['sort'] == null ? undefined : ((value['sort'] as Array<any>).map(SortObjectToJSON)),
        'empty': value['empty'],
    };
}

