/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Access details for inbox using SMTP
 * @export
 * @interface SmtpAccessDetails
 */
export interface SmtpAccessDetails {
    /**
     * Secure TLS SMTP server host domain
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    secureSmtpServerHost: string;
    /**
     * Secure TLS SMTP server host port
     * @type {number}
     * @memberof SmtpAccessDetails
     */
    secureSmtpServerPort: number;
    /**
     * Secure TLS SMTP username for login
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    secureSmtpUsername: string;
    /**
     * Secure TLS SMTP password for login
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    secureSmtpPassword: string;
    /**
     * SMTP server host domain
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    smtpServerHost: string;
    /**
     * SMTP server host port
     * @type {number}
     * @memberof SmtpAccessDetails
     */
    smtpServerPort: number;
    /**
     * SMTP username for login
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    smtpUsername: string;
    /**
     * SMTP password for login
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    smtpPassword: string;
    /**
     * Mail from domain or SMTP HELO value
     * @type {string}
     * @memberof SmtpAccessDetails
     */
    mailFromDomain?: string | null;
}

/**
 * Check if a given object implements the SmtpAccessDetails interface.
 */
export function instanceOfSmtpAccessDetails(value: object): value is SmtpAccessDetails {
    if (!('secureSmtpServerHost' in value) || value['secureSmtpServerHost'] === undefined) return false;
    if (!('secureSmtpServerPort' in value) || value['secureSmtpServerPort'] === undefined) return false;
    if (!('secureSmtpUsername' in value) || value['secureSmtpUsername'] === undefined) return false;
    if (!('secureSmtpPassword' in value) || value['secureSmtpPassword'] === undefined) return false;
    if (!('smtpServerHost' in value) || value['smtpServerHost'] === undefined) return false;
    if (!('smtpServerPort' in value) || value['smtpServerPort'] === undefined) return false;
    if (!('smtpUsername' in value) || value['smtpUsername'] === undefined) return false;
    if (!('smtpPassword' in value) || value['smtpPassword'] === undefined) return false;
    return true;
}

export function SmtpAccessDetailsFromJSON(json: any): SmtpAccessDetails {
    return SmtpAccessDetailsFromJSONTyped(json, false);
}

export function SmtpAccessDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmtpAccessDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'secureSmtpServerHost': json['secureSmtpServerHost'],
        'secureSmtpServerPort': json['secureSmtpServerPort'],
        'secureSmtpUsername': json['secureSmtpUsername'],
        'secureSmtpPassword': json['secureSmtpPassword'],
        'smtpServerHost': json['smtpServerHost'],
        'smtpServerPort': json['smtpServerPort'],
        'smtpUsername': json['smtpUsername'],
        'smtpPassword': json['smtpPassword'],
        'mailFromDomain': json['mailFromDomain'] == null ? undefined : json['mailFromDomain'],
    };
}

export function SmtpAccessDetailsToJSON(json: any): SmtpAccessDetails {
    return SmtpAccessDetailsToJSONTyped(json, false);
}

export function SmtpAccessDetailsToJSONTyped(value?: SmtpAccessDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'secureSmtpServerHost': value['secureSmtpServerHost'],
        'secureSmtpServerPort': value['secureSmtpServerPort'],
        'secureSmtpUsername': value['secureSmtpUsername'],
        'secureSmtpPassword': value['secureSmtpPassword'],
        'smtpServerHost': value['smtpServerHost'],
        'smtpServerPort': value['smtpServerPort'],
        'smtpUsername': value['smtpUsername'],
        'smtpPassword': value['smtpPassword'],
        'mailFromDomain': value['mailFromDomain'],
    };
}

