/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServerEndpoints
 */
export interface ServerEndpoints {
    /**
     * 
     * @type {string}
     * @memberof ServerEndpoints
     */
    host: string;
    /**
     * 
     * @type {number}
     * @memberof ServerEndpoints
     */
    port: number;
    /**
     * 
     * @type {boolean}
     * @memberof ServerEndpoints
     */
    tls: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof ServerEndpoints
     */
    altPorts: Array<number>;
}

/**
 * Check if a given object implements the ServerEndpoints interface.
 */
export function instanceOfServerEndpoints(value: object): value is ServerEndpoints {
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('port' in value) || value['port'] === undefined) return false;
    if (!('tls' in value) || value['tls'] === undefined) return false;
    if (!('altPorts' in value) || value['altPorts'] === undefined) return false;
    return true;
}

export function ServerEndpointsFromJSON(json: any): ServerEndpoints {
    return ServerEndpointsFromJSONTyped(json, false);
}

export function ServerEndpointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerEndpoints {
    if (json == null) {
        return json;
    }
    return {
        
        'host': json['host'],
        'port': json['port'],
        'tls': json['tls'],
        'altPorts': json['altPorts'],
    };
}

export function ServerEndpointsToJSON(json: any): ServerEndpoints {
    return ServerEndpointsToJSONTyped(json, false);
}

export function ServerEndpointsToJSONTyped(value?: ServerEndpoints | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'host': value['host'],
        'port': value['port'],
        'tls': value['tls'],
        'altPorts': value['altPorts'],
    };
}

