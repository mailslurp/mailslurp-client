/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GuestPortalUserDto
 */
export interface GuestPortalUserDto {
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    portalId: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    inboxId?: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserDto
     */
    loginUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof GuestPortalUserDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GuestPortalUserDto
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the GuestPortalUserDto interface.
 */
export function instanceOfGuestPortalUserDto(value: object): value is GuestPortalUserDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('portalId' in value) || value['portalId'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('loginUrl' in value) || value['loginUrl'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function GuestPortalUserDtoFromJSON(json: any): GuestPortalUserDto {
    return GuestPortalUserDtoFromJSONTyped(json, false);
}

export function GuestPortalUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestPortalUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'portalId': json['portalId'],
        'name': json['name'] == null ? undefined : json['name'],
        'username': json['username'],
        'emailAddress': json['emailAddress'] == null ? undefined : json['emailAddress'],
        'inboxId': json['inboxId'] == null ? undefined : json['inboxId'],
        'loginUrl': json['loginUrl'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function GuestPortalUserDtoToJSON(json: any): GuestPortalUserDto {
    return GuestPortalUserDtoToJSONTyped(json, false);
}

export function GuestPortalUserDtoToJSONTyped(value?: GuestPortalUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'portalId': value['portalId'],
        'name': value['name'],
        'username': value['username'],
        'emailAddress': value['emailAddress'],
        'inboxId': value['inboxId'],
        'loginUrl': value['loginUrl'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

