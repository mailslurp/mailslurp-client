/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreatePortalOptions
 */
export interface CreatePortalOptions {
    /**
     * 
     * @type {string}
     * @memberof CreatePortalOptions
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePortalOptions
     */
    domainId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePortalOptions
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePortalOptions
     */
    linkHelp?: string;
}

/**
 * Check if a given object implements the CreatePortalOptions interface.
 */
export function instanceOfCreatePortalOptions(value: object): value is CreatePortalOptions {
    return true;
}

export function CreatePortalOptionsFromJSON(json: any): CreatePortalOptions {
    return CreatePortalOptionsFromJSONTyped(json, false);
}

export function CreatePortalOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePortalOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'domainId': json['domainId'] == null ? undefined : json['domainId'],
        'description': json['description'] == null ? undefined : json['description'],
        'linkHelp': json['linkHelp'] == null ? undefined : json['linkHelp'],
    };
}

export function CreatePortalOptionsToJSON(json: any): CreatePortalOptions {
    return CreatePortalOptionsToJSONTyped(json, false);
}

export function CreatePortalOptionsToJSONTyped(value?: CreatePortalOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'domainId': value['domainId'],
        'description': value['description'],
        'linkHelp': value['linkHelp'],
    };
}

