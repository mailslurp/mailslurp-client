/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GenerateTlsReportingRecordOptions
 */
export interface GenerateTlsReportingRecordOptions {
    /**
     * 
     * @type {Array<string>}
     * @memberof GenerateTlsReportingRecordOptions
     */
    reportingAddresses: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof GenerateTlsReportingRecordOptions
     */
    reportingUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof GenerateTlsReportingRecordOptions
     */
    host: string;
    /**
     * 
     * @type {string}
     * @memberof GenerateTlsReportingRecordOptions
     */
    version: GenerateTlsReportingRecordOptionsVersionEnum;
    /**
     * 
     * @type {number}
     * @memberof GenerateTlsReportingRecordOptions
     */
    ttl: number;
}


/**
 * @export
 */
export const GenerateTlsReportingRecordOptionsVersionEnum = {
    TLSRPTv1: 'TLSRPTv1'
} as const;
export type GenerateTlsReportingRecordOptionsVersionEnum = typeof GenerateTlsReportingRecordOptionsVersionEnum[keyof typeof GenerateTlsReportingRecordOptionsVersionEnum];


/**
 * Check if a given object implements the GenerateTlsReportingRecordOptions interface.
 */
export function instanceOfGenerateTlsReportingRecordOptions(value: object): value is GenerateTlsReportingRecordOptions {
    if (!('reportingAddresses' in value) || value['reportingAddresses'] === undefined) return false;
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('ttl' in value) || value['ttl'] === undefined) return false;
    return true;
}

export function GenerateTlsReportingRecordOptionsFromJSON(json: any): GenerateTlsReportingRecordOptions {
    return GenerateTlsReportingRecordOptionsFromJSONTyped(json, false);
}

export function GenerateTlsReportingRecordOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateTlsReportingRecordOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'reportingAddresses': json['reportingAddresses'],
        'reportingUrl': json['reportingUrl'] == null ? undefined : json['reportingUrl'],
        'host': json['host'],
        'version': json['version'],
        'ttl': json['ttl'],
    };
}

export function GenerateTlsReportingRecordOptionsToJSON(json: any): GenerateTlsReportingRecordOptions {
    return GenerateTlsReportingRecordOptionsToJSONTyped(json, false);
}

export function GenerateTlsReportingRecordOptionsToJSONTyped(value?: GenerateTlsReportingRecordOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reportingAddresses': value['reportingAddresses'],
        'reportingUrl': value['reportingUrl'],
        'host': value['host'],
        'version': value['version'],
        'ttl': value['ttl'],
    };
}

