/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Missed email
 * @export
 * @interface MissedEmail
 */
export interface MissedEmail {
  /**
   *
   * @type {string}
   * @memberof MissedEmail
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof MissedEmail
   */
  userId?: string;
  /**
   *
   * @type {string}
   * @memberof MissedEmail
   */
  subject?: string;
  /**
   *
   * @type {string}
   * @memberof MissedEmail
   */
  bodyExcerpt?: string;
  /**
   *
   * @type {number}
   * @memberof MissedEmail
   */
  attachmentCount: number;
  /**
   *
   * @type {string}
   * @memberof MissedEmail
   */
  from?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof MissedEmail
   */
  to: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof MissedEmail
   */
  cc: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof MissedEmail
   */
  bcc: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof MissedEmail
   */
  inboxIds: Array<string>;
  /**
   *
   * @type {Date}
   * @memberof MissedEmail
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof MissedEmail
   */
  updatedAt: Date;
}

export function MissedEmailFromJSON(json: any): MissedEmail {
  return MissedEmailFromJSONTyped(json, false);
}

export function MissedEmailFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MissedEmail {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    userId: !exists(json, 'userId') ? undefined : json['userId'],
    subject: !exists(json, 'subject') ? undefined : json['subject'],
    bodyExcerpt: !exists(json, 'bodyExcerpt') ? undefined : json['bodyExcerpt'],
    attachmentCount: json['attachmentCount'],
    from: !exists(json, 'from') ? undefined : json['from'],
    to: json['to'],
    cc: json['cc'],
    bcc: json['bcc'],
    inboxIds: json['inboxIds'],
    createdAt: new Date(json['createdAt']),
    updatedAt: new Date(json['updatedAt']),
  };
}

export function MissedEmailToJSON(value?: MissedEmail | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    userId: value.userId,
    subject: value.subject,
    bodyExcerpt: value.bodyExcerpt,
    attachmentCount: value.attachmentCount,
    from: value.from,
    to: value.to,
    cc: value.cc,
    bcc: value.bcc,
    inboxIds: value.inboxIds,
    createdAt: value.createdAt.toISOString(),
    updatedAt: value.updatedAt.toISOString(),
  };
}
