/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * List unsubscribe recipient
 * @export
 * @interface ListUnsubscribeRecipientProjection
 */
export interface ListUnsubscribeRecipientProjection {
    /**
     * 
     * @type {Date}
     * @memberof ListUnsubscribeRecipientProjection
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ListUnsubscribeRecipientProjection
     */
    emailAddress: string;
    /**
     * 
     * @type {string}
     * @memberof ListUnsubscribeRecipientProjection
     */
    domainId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ListUnsubscribeRecipientProjection
     */
    id: string;
}

/**
 * Check if a given object implements the ListUnsubscribeRecipientProjection interface.
 */
export function instanceOfListUnsubscribeRecipientProjection(value: object): value is ListUnsubscribeRecipientProjection {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('emailAddress' in value) || value['emailAddress'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function ListUnsubscribeRecipientProjectionFromJSON(json: any): ListUnsubscribeRecipientProjection {
    return ListUnsubscribeRecipientProjectionFromJSONTyped(json, false);
}

export function ListUnsubscribeRecipientProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListUnsubscribeRecipientProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'emailAddress': json['emailAddress'],
        'domainId': json['domainId'] == null ? undefined : json['domainId'],
        'id': json['id'],
    };
}

export function ListUnsubscribeRecipientProjectionToJSON(json: any): ListUnsubscribeRecipientProjection {
    return ListUnsubscribeRecipientProjectionToJSONTyped(json, false);
}

export function ListUnsubscribeRecipientProjectionToJSONTyped(value?: ListUnsubscribeRecipientProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': ((value['createdAt']).toISOString()),
        'emailAddress': value['emailAddress'],
        'domainId': value['domainId'],
        'id': value['id'],
    };
}

