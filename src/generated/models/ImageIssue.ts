/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImageIssue
 */
export interface ImageIssue {
    /**
     * 
     * @type {string}
     * @memberof ImageIssue
     */
    url: string;
    /**
     * 
     * @type {number}
     * @memberof ImageIssue
     */
    responseStatus?: number;
    /**
     * 
     * @type {string}
     * @memberof ImageIssue
     */
    severity: ImageIssueSeverityEnum;
    /**
     * 
     * @type {string}
     * @memberof ImageIssue
     */
    message: string;
}


/**
 * @export
 */
export const ImageIssueSeverityEnum = {
    Warning: 'Warning',
    Error: 'Error'
} as const;
export type ImageIssueSeverityEnum = typeof ImageIssueSeverityEnum[keyof typeof ImageIssueSeverityEnum];


/**
 * Check if a given object implements the ImageIssue interface.
 */
export function instanceOfImageIssue(value: object): value is ImageIssue {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function ImageIssueFromJSON(json: any): ImageIssue {
    return ImageIssueFromJSONTyped(json, false);
}

export function ImageIssueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageIssue {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'responseStatus': json['responseStatus'] == null ? undefined : json['responseStatus'],
        'severity': json['severity'],
        'message': json['message'],
    };
}

export function ImageIssueToJSON(json: any): ImageIssue {
    return ImageIssueToJSONTyped(json, false);
}

export function ImageIssueToJSONTyped(value?: ImageIssue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'responseStatus': value['responseStatus'],
        'severity': value['severity'],
        'message': value['message'],
    };
}

