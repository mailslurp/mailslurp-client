/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Options for creating automatic syncing between an inbox connection and an external mail provider
 * @export
 * @interface CreateConnectorSyncSettingsOptions
 */
export interface CreateConnectorSyncSettingsOptions {
    /**
     * Enable automatic background sync
     * @type {boolean}
     * @memberof CreateConnectorSyncSettingsOptions
     */
    syncEnabled?: boolean | null;
    /**
     * Sync schedule type
     * @type {string}
     * @memberof CreateConnectorSyncSettingsOptions
     */
    syncScheduleType?: CreateConnectorSyncSettingsOptionsSyncScheduleTypeEnum | null;
    /**
     * Sync interval in minutes
     * @type {number}
     * @memberof CreateConnectorSyncSettingsOptions
     */
    syncInterval?: number | null;
}


/**
 * @export
 */
export const CreateConnectorSyncSettingsOptionsSyncScheduleTypeEnum = {
    INTERVAL: 'INTERVAL'
} as const;
export type CreateConnectorSyncSettingsOptionsSyncScheduleTypeEnum = typeof CreateConnectorSyncSettingsOptionsSyncScheduleTypeEnum[keyof typeof CreateConnectorSyncSettingsOptionsSyncScheduleTypeEnum];


/**
 * Check if a given object implements the CreateConnectorSyncSettingsOptions interface.
 */
export function instanceOfCreateConnectorSyncSettingsOptions(value: object): value is CreateConnectorSyncSettingsOptions {
    return true;
}

export function CreateConnectorSyncSettingsOptionsFromJSON(json: any): CreateConnectorSyncSettingsOptions {
    return CreateConnectorSyncSettingsOptionsFromJSONTyped(json, false);
}

export function CreateConnectorSyncSettingsOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateConnectorSyncSettingsOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'syncEnabled': json['syncEnabled'] == null ? undefined : json['syncEnabled'],
        'syncScheduleType': json['syncScheduleType'] == null ? undefined : json['syncScheduleType'],
        'syncInterval': json['syncInterval'] == null ? undefined : json['syncInterval'],
    };
}

export function CreateConnectorSyncSettingsOptionsToJSON(json: any): CreateConnectorSyncSettingsOptions {
    return CreateConnectorSyncSettingsOptionsToJSONTyped(json, false);
}

export function CreateConnectorSyncSettingsOptionsToJSONTyped(value?: CreateConnectorSyncSettingsOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'syncEnabled': value['syncEnabled'],
        'syncScheduleType': value['syncScheduleType'],
        'syncInterval': value['syncInterval'],
    };
}

