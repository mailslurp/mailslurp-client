/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Result of validating a list of email addresses
 * @export
 * @interface ValidateEmailAddressListResult
 */
export interface ValidateEmailAddressListResult {
    /**
     * 
     * @type {Array<string>}
     * @memberof ValidateEmailAddressListResult
     */
    validEmailAddresses: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ValidateEmailAddressListResult
     */
    invalidEmailAddresses: Array<string>;
    /**
     * 
     * @type {{ [key: string]: boolean; }}
     * @memberof ValidateEmailAddressListResult
     */
    resultMapEmailAddressIsValid: { [key: string]: boolean; };
}

/**
 * Check if a given object implements the ValidateEmailAddressListResult interface.
 */
export function instanceOfValidateEmailAddressListResult(value: object): value is ValidateEmailAddressListResult {
    if (!('validEmailAddresses' in value) || value['validEmailAddresses'] === undefined) return false;
    if (!('invalidEmailAddresses' in value) || value['invalidEmailAddresses'] === undefined) return false;
    if (!('resultMapEmailAddressIsValid' in value) || value['resultMapEmailAddressIsValid'] === undefined) return false;
    return true;
}

export function ValidateEmailAddressListResultFromJSON(json: any): ValidateEmailAddressListResult {
    return ValidateEmailAddressListResultFromJSONTyped(json, false);
}

export function ValidateEmailAddressListResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateEmailAddressListResult {
    if (json == null) {
        return json;
    }
    return {
        
        'validEmailAddresses': json['validEmailAddresses'],
        'invalidEmailAddresses': json['invalidEmailAddresses'],
        'resultMapEmailAddressIsValid': json['resultMapEmailAddressIsValid'],
    };
}

export function ValidateEmailAddressListResultToJSON(json: any): ValidateEmailAddressListResult {
    return ValidateEmailAddressListResultToJSONTyped(json, false);
}

export function ValidateEmailAddressListResultToJSONTyped(value?: ValidateEmailAddressListResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'validEmailAddresses': value['validEmailAddresses'],
        'invalidEmailAddresses': value['invalidEmailAddresses'],
        'resultMapEmailAddressIsValid': value['resultMapEmailAddressIsValid'],
    };
}

