/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Result from calling expire on any inboxes that have applicable expiration dates given current time.
 * @export
 * @interface FlushExpiredInboxesResult
 */
export interface FlushExpiredInboxesResult {
  /**
   * Inbox IDs affected by expiration
   * @type {Array<string>}
   * @memberof FlushExpiredInboxesResult
   */
  inboxIds: Array<string>;
  /**
   * DateTime to filter inboxes so that those expiring before this time are expired
   * @type {Date}
   * @memberof FlushExpiredInboxesResult
   */
  expireBefore: Date;
}

export function FlushExpiredInboxesResultFromJSON(
  json: any
): FlushExpiredInboxesResult {
  return FlushExpiredInboxesResultFromJSONTyped(json, false);
}

export function FlushExpiredInboxesResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FlushExpiredInboxesResult {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    inboxIds: json['inboxIds'],
    expireBefore: new Date(json['expireBefore']),
  };
}

export function FlushExpiredInboxesResultToJSON(
  value?: FlushExpiredInboxesResult | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    inboxIds: value.inboxIds,
    expireBefore: value.expireBefore.toISOString(),
  };
}
