/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GuestPortalDto
 */
export interface GuestPortalDto {
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    domainId?: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    linkHelp?: string;
    /**
     * 
     * @type {Date}
     * @memberof GuestPortalDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GuestPortalDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalDto
     */
    loginUrl: string;
}

/**
 * Check if a given object implements the GuestPortalDto interface.
 */
export function instanceOfGuestPortalDto(value: object): value is GuestPortalDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('loginUrl' in value) || value['loginUrl'] === undefined) return false;
    return true;
}

export function GuestPortalDtoFromJSON(json: any): GuestPortalDto {
    return GuestPortalDtoFromJSONTyped(json, false);
}

export function GuestPortalDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestPortalDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'domainId': json['domainId'] == null ? undefined : json['domainId'],
        'userId': json['userId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'linkHelp': json['linkHelp'] == null ? undefined : json['linkHelp'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'loginUrl': json['loginUrl'],
    };
}

export function GuestPortalDtoToJSON(json: any): GuestPortalDto {
    return GuestPortalDtoToJSONTyped(json, false);
}

export function GuestPortalDtoToJSONTyped(value?: GuestPortalDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'domainId': value['domainId'],
        'userId': value['userId'],
        'name': value['name'],
        'description': value['description'],
        'linkHelp': value['linkHelp'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'loginUrl': value['loginUrl'],
    };
}

