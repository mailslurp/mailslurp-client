/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Email validation request
 * @export
 * @interface EmailValidationRequestDto
 */
export interface EmailValidationRequestDto {
  /**
   *
   * @type {string}
   * @memberof EmailValidationRequestDto
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof EmailValidationRequestDto
   */
  userId: string;
  /**
   *
   * @type {string}
   * @memberof EmailValidationRequestDto
   */
  emailAddress: string;
  /**
   *
   * @type {boolean}
   * @memberof EmailValidationRequestDto
   */
  isValid: boolean;
  /**
   *
   * @type {Date}
   * @memberof EmailValidationRequestDto
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof EmailValidationRequestDto
   */
  updatedAt: Date;
}

export function EmailValidationRequestDtoFromJSON(
  json: any
): EmailValidationRequestDto {
  return EmailValidationRequestDtoFromJSONTyped(json, false);
}

export function EmailValidationRequestDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EmailValidationRequestDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    userId: json['userId'],
    emailAddress: json['emailAddress'],
    isValid: json['isValid'],
    createdAt: new Date(json['createdAt']),
    updatedAt: new Date(json['updatedAt']),
  };
}

export function EmailValidationRequestDtoToJSON(
  value?: EmailValidationRequestDto | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    userId: value.userId,
    emailAddress: value.emailAddress,
    isValid: value.isValid,
    createdAt: value.createdAt.toISOString(),
    updatedAt: value.updatedAt.toISOString(),
  };
}
