/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateInboxDto } from './CreateInboxDto';
import {
    CreateInboxDtoFromJSON,
    CreateInboxDtoFromJSONTyped,
    CreateInboxDtoToJSON,
    CreateInboxDtoToJSONTyped,
} from './CreateInboxDto';

/**
 * 
 * @export
 * @interface CreatePortalUserOptions
 */
export interface CreatePortalUserOptions {
    /**
     * 
     * @type {string}
     * @memberof CreatePortalUserOptions
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePortalUserOptions
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePortalUserOptions
     */
    username?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreatePortalUserOptions
     */
    skipInboxCreation?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreatePortalUserOptions
     */
    inboxId?: string;
    /**
     * 
     * @type {CreateInboxDto}
     * @memberof CreatePortalUserOptions
     */
    createInboxOptions?: CreateInboxDto;
}

/**
 * Check if a given object implements the CreatePortalUserOptions interface.
 */
export function instanceOfCreatePortalUserOptions(value: object): value is CreatePortalUserOptions {
    return true;
}

export function CreatePortalUserOptionsFromJSON(json: any): CreatePortalUserOptions {
    return CreatePortalUserOptionsFromJSONTyped(json, false);
}

export function CreatePortalUserOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePortalUserOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'password': json['password'] == null ? undefined : json['password'],
        'name': json['name'] == null ? undefined : json['name'],
        'username': json['username'] == null ? undefined : json['username'],
        'skipInboxCreation': json['skipInboxCreation'] == null ? undefined : json['skipInboxCreation'],
        'inboxId': json['inboxId'] == null ? undefined : json['inboxId'],
        'createInboxOptions': json['createInboxOptions'] == null ? undefined : CreateInboxDtoFromJSON(json['createInboxOptions']),
    };
}

export function CreatePortalUserOptionsToJSON(json: any): CreatePortalUserOptions {
    return CreatePortalUserOptionsToJSONTyped(json, false);
}

export function CreatePortalUserOptionsToJSONTyped(value?: CreatePortalUserOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'password': value['password'],
        'name': value['name'],
        'username': value['username'],
        'skipInboxCreation': value['skipInboxCreation'],
        'inboxId': value['inboxId'],
        'createInboxOptions': CreateInboxDtoToJSON(value['createInboxOptions']),
    };
}

