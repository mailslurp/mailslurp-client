/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Recipient } from './Recipient';
import {
    RecipientFromJSON,
    RecipientFromJSONTyped,
    RecipientToJSON,
    RecipientToJSONTyped,
} from './Recipient';

/**
 * The `To`,`CC`,`BCC` recipients stored in object form with email address and name accessible.
 * @export
 * @interface EmailRecipients
 */
export interface EmailRecipients {
    /**
     * 
     * @type {Array<Recipient>}
     * @memberof EmailRecipients
     */
    to?: Array<Recipient>;
    /**
     * 
     * @type {Array<Recipient>}
     * @memberof EmailRecipients
     */
    cc?: Array<Recipient>;
    /**
     * 
     * @type {Array<Recipient>}
     * @memberof EmailRecipients
     */
    bcc?: Array<Recipient>;
}

/**
 * Check if a given object implements the EmailRecipients interface.
 */
export function instanceOfEmailRecipients(value: object): value is EmailRecipients {
    return true;
}

export function EmailRecipientsFromJSON(json: any): EmailRecipients {
    return EmailRecipientsFromJSONTyped(json, false);
}

export function EmailRecipientsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailRecipients {
    if (json == null) {
        return json;
    }
    return {
        
        'to': json['to'] == null ? undefined : ((json['to'] as Array<any>).map(RecipientFromJSON)),
        'cc': json['cc'] == null ? undefined : ((json['cc'] as Array<any>).map(RecipientFromJSON)),
        'bcc': json['bcc'] == null ? undefined : ((json['bcc'] as Array<any>).map(RecipientFromJSON)),
    };
}

export function EmailRecipientsToJSON(json: any): EmailRecipients {
    return EmailRecipientsToJSONTyped(json, false);
}

export function EmailRecipientsToJSONTyped(value?: EmailRecipients | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'to': value['to'] == null ? undefined : ((value['to'] as Array<any>).map(RecipientToJSON)),
        'cc': value['cc'] == null ? undefined : ((value['cc'] as Array<any>).map(RecipientToJSON)),
        'bcc': value['bcc'] == null ? undefined : ((value['bcc'] as Array<any>).map(RecipientToJSON)),
    };
}

