/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ImapUpdateFlagsOptions
 */
export interface ImapUpdateFlagsOptions {
  /**
   *
   * @type {string}
   * @memberof ImapUpdateFlagsOptions
   */
  operation: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ImapUpdateFlagsOptions
   */
  flags?: Array<string> | null;
  /**
   *
   * @type {string}
   * @memberof ImapUpdateFlagsOptions
   */
  uidSet?: string | null;
  /**
   *
   * @type {string}
   * @memberof ImapUpdateFlagsOptions
   */
  seqSet?: string | null;
}

export function ImapUpdateFlagsOptionsFromJSON(
  json: any
): ImapUpdateFlagsOptions {
  return ImapUpdateFlagsOptionsFromJSONTyped(json, false);
}

export function ImapUpdateFlagsOptionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ImapUpdateFlagsOptions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    operation: json['operation'],
    flags: !exists(json, 'flags') ? undefined : json['flags'],
    uidSet: !exists(json, 'uidSet') ? undefined : json['uidSet'],
    seqSet: !exists(json, 'seqSet') ? undefined : json['seqSet'],
  };
}

export function ImapUpdateFlagsOptionsToJSON(
  value?: ImapUpdateFlagsOptions | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    operation: value.operation,
    flags: value.flags,
    uidSet: value.uidSet,
    seqSet: value.seqSet,
  };
}
