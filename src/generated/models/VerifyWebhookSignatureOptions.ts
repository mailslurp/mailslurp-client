/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VerifyWebhookSignatureOptions
 */
export interface VerifyWebhookSignatureOptions {
    /**
     * 
     * @type {string}
     * @memberof VerifyWebhookSignatureOptions
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof VerifyWebhookSignatureOptions
     */
    signature: string;
}

/**
 * Check if a given object implements the VerifyWebhookSignatureOptions interface.
 */
export function instanceOfVerifyWebhookSignatureOptions(value: object): value is VerifyWebhookSignatureOptions {
    if (!('messageId' in value) || value['messageId'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    return true;
}

export function VerifyWebhookSignatureOptionsFromJSON(json: any): VerifyWebhookSignatureOptions {
    return VerifyWebhookSignatureOptionsFromJSONTyped(json, false);
}

export function VerifyWebhookSignatureOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyWebhookSignatureOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'messageId': json['messageId'],
        'signature': json['signature'],
    };
}

export function VerifyWebhookSignatureOptionsToJSON(json: any): VerifyWebhookSignatureOptions {
    return VerifyWebhookSignatureOptionsToJSONTyped(json, false);
}

export function VerifyWebhookSignatureOptionsToJSONTyped(value?: VerifyWebhookSignatureOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messageId': value['messageId'],
        'signature': value['signature'],
    };
}

