/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Options for setting phone favourite state
 * @export
 * @interface SetPhoneFavouritedOptions
 */
export interface SetPhoneFavouritedOptions {
    /**
     * Phone favourite state
     * @type {boolean}
     * @memberof SetPhoneFavouritedOptions
     */
    state: boolean;
}

/**
 * Check if a given object implements the SetPhoneFavouritedOptions interface.
 */
export function instanceOfSetPhoneFavouritedOptions(value: object): value is SetPhoneFavouritedOptions {
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function SetPhoneFavouritedOptionsFromJSON(json: any): SetPhoneFavouritedOptions {
    return SetPhoneFavouritedOptionsFromJSONTyped(json, false);
}

export function SetPhoneFavouritedOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPhoneFavouritedOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'state': json['state'],
    };
}

export function SetPhoneFavouritedOptionsToJSON(json: any): SetPhoneFavouritedOptions {
    return SetPhoneFavouritedOptionsToJSONTyped(json, false);
}

export function SetPhoneFavouritedOptionsToJSONTyped(value?: SetPhoneFavouritedOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'state': value['state'],
    };
}

