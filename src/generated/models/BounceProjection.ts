/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Bounced email event
 * @export
 * @interface BounceProjection
 */
export interface BounceProjection {
  /**
   *
   * @type {string}
   * @memberof BounceProjection
   */
  subject?: string | null;
  /**
   *
   * @type {string}
   * @memberof BounceProjection
   */
  sender: string;
  /**
   *
   * @type {string}
   * @memberof BounceProjection
   */
  bounceMta?: string | null;
  /**
   *
   * @type {string}
   * @memberof BounceProjection
   */
  bounceType?: string | null;
  /**
   *
   * @type {Date}
   * @memberof BounceProjection
   */
  createdAt: Date;
  /**
   *
   * @type {string}
   * @memberof BounceProjection
   */
  id?: string;
}

export function BounceProjectionFromJSON(json: any): BounceProjection {
  return BounceProjectionFromJSONTyped(json, false);
}

export function BounceProjectionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BounceProjection {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    subject: !exists(json, 'subject') ? undefined : json['subject'],
    sender: json['sender'],
    bounceMta: !exists(json, 'bounceMta') ? undefined : json['bounceMta'],
    bounceType: !exists(json, 'bounceType') ? undefined : json['bounceType'],
    createdAt: new Date(json['createdAt']),
    id: !exists(json, 'id') ? undefined : json['id'],
  };
}

export function BounceProjectionToJSON(value?: BounceProjection | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    subject: value.subject,
    sender: value.sender,
    bounceMta: value.bounceMta,
    bounceType: value.bounceType,
    createdAt: value.createdAt.toISOString(),
    id: value.id,
  };
}
