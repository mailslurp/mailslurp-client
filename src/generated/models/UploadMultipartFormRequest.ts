/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UploadMultipartFormRequest
 */
export interface UploadMultipartFormRequest {
    /**
     * 
     * @type {Blob}
     * @memberof UploadMultipartFormRequest
     */
    file: Blob;
}

/**
 * Check if a given object implements the UploadMultipartFormRequest interface.
 */
export function instanceOfUploadMultipartFormRequest(value: object): value is UploadMultipartFormRequest {
    if (!('file' in value) || value['file'] === undefined) return false;
    return true;
}

export function UploadMultipartFormRequestFromJSON(json: any): UploadMultipartFormRequest {
    return UploadMultipartFormRequestFromJSONTyped(json, false);
}

export function UploadMultipartFormRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadMultipartFormRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'file': json['file'],
    };
}

export function UploadMultipartFormRequestToJSON(json: any): UploadMultipartFormRequest {
    return UploadMultipartFormRequestToJSONTyped(json, false);
}

export function UploadMultipartFormRequestToJSONTyped(value?: UploadMultipartFormRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'file': value['file'],
    };
}

