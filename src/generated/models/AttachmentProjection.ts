/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface AttachmentProjection
 */
export interface AttachmentProjection {
  /**
   * Attachment ID
   * @type {string}
   * @memberof AttachmentProjection
   */
  attachmentId?: string;
  /**
   * Content length of attachment in bytes
   * @type {number}
   * @memberof AttachmentProjection
   */
  contentLength?: number;
  /**
   * Content type of attachment.
   * @type {string}
   * @memberof AttachmentProjection
   */
  contentType?: string;
  /**
   *
   * @type {Date}
   * @memberof AttachmentProjection
   */
  createdAt: Date;
  /**
   *
   * @type {string}
   * @memberof AttachmentProjection
   */
  name?: string;
  /**
   *
   * @type {Date}
   * @memberof AttachmentProjection
   */
  updatedAt: Date;
  /**
   *
   * @type {string}
   * @memberof AttachmentProjection
   */
  userId: string;
}

export function AttachmentProjectionFromJSON(json: any): AttachmentProjection {
  return AttachmentProjectionFromJSONTyped(json, false);
}

export function AttachmentProjectionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AttachmentProjection {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    attachmentId: !exists(json, 'attachmentId')
      ? undefined
      : json['attachmentId'],
    contentLength: !exists(json, 'contentLength')
      ? undefined
      : json['contentLength'],
    contentType: !exists(json, 'contentType') ? undefined : json['contentType'],
    createdAt: new Date(json['createdAt']),
    name: !exists(json, 'name') ? undefined : json['name'],
    updatedAt: new Date(json['updatedAt']),
    userId: json['userId'],
  };
}

export function AttachmentProjectionToJSON(
  value?: AttachmentProjection | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    attachmentId: value.attachmentId,
    contentLength: value.contentLength,
    contentType: value.contentType,
    createdAt: value.createdAt.toISOString(),
    name: value.name,
    updatedAt: value.updatedAt.toISOString(),
    userId: value.userId,
  };
}
