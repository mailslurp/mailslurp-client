/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LookupTlsReportingDomainOptions
 */
export interface LookupTlsReportingDomainOptions {
    /**
     * 
     * @type {string}
     * @memberof LookupTlsReportingDomainOptions
     */
    host: string;
}

/**
 * Check if a given object implements the LookupTlsReportingDomainOptions interface.
 */
export function instanceOfLookupTlsReportingDomainOptions(value: object): value is LookupTlsReportingDomainOptions {
    if (!('host' in value) || value['host'] === undefined) return false;
    return true;
}

export function LookupTlsReportingDomainOptionsFromJSON(json: any): LookupTlsReportingDomainOptions {
    return LookupTlsReportingDomainOptionsFromJSONTyped(json, false);
}

export function LookupTlsReportingDomainOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LookupTlsReportingDomainOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'host': json['host'],
    };
}

export function LookupTlsReportingDomainOptionsToJSON(json: any): LookupTlsReportingDomainOptions {
    return LookupTlsReportingDomainOptionsToJSONTyped(json, false);
}

export function LookupTlsReportingDomainOptionsToJSONTyped(value?: LookupTlsReportingDomainOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'host': value['host'],
    };
}

