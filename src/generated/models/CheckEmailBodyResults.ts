/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SpellingIssue } from './SpellingIssue';
import {
    SpellingIssueFromJSON,
    SpellingIssueFromJSONTyped,
    SpellingIssueToJSON,
    SpellingIssueToJSONTyped,
} from './SpellingIssue';
import type { ImageIssue } from './ImageIssue';
import {
    ImageIssueFromJSON,
    ImageIssueFromJSONTyped,
    ImageIssueToJSON,
    ImageIssueToJSONTyped,
} from './ImageIssue';
import type { LinkIssue } from './LinkIssue';
import {
    LinkIssueFromJSON,
    LinkIssueFromJSONTyped,
    LinkIssueToJSON,
    LinkIssueToJSONTyped,
} from './LinkIssue';

/**
 * 
 * @export
 * @interface CheckEmailBodyResults
 */
export interface CheckEmailBodyResults {
    /**
     * 
     * @type {boolean}
     * @memberof CheckEmailBodyResults
     */
    hasIssues: boolean;
    /**
     * 
     * @type {Array<LinkIssue>}
     * @memberof CheckEmailBodyResults
     */
    linkIssues: Array<LinkIssue>;
    /**
     * 
     * @type {Array<ImageIssue>}
     * @memberof CheckEmailBodyResults
     */
    imageIssues: Array<ImageIssue>;
    /**
     * 
     * @type {Array<SpellingIssue>}
     * @memberof CheckEmailBodyResults
     */
    spellingIssues: Array<SpellingIssue>;
}

/**
 * Check if a given object implements the CheckEmailBodyResults interface.
 */
export function instanceOfCheckEmailBodyResults(value: object): value is CheckEmailBodyResults {
    if (!('hasIssues' in value) || value['hasIssues'] === undefined) return false;
    if (!('linkIssues' in value) || value['linkIssues'] === undefined) return false;
    if (!('imageIssues' in value) || value['imageIssues'] === undefined) return false;
    if (!('spellingIssues' in value) || value['spellingIssues'] === undefined) return false;
    return true;
}

export function CheckEmailBodyResultsFromJSON(json: any): CheckEmailBodyResults {
    return CheckEmailBodyResultsFromJSONTyped(json, false);
}

export function CheckEmailBodyResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckEmailBodyResults {
    if (json == null) {
        return json;
    }
    return {
        
        'hasIssues': json['hasIssues'],
        'linkIssues': ((json['linkIssues'] as Array<any>).map(LinkIssueFromJSON)),
        'imageIssues': ((json['imageIssues'] as Array<any>).map(ImageIssueFromJSON)),
        'spellingIssues': ((json['spellingIssues'] as Array<any>).map(SpellingIssueFromJSON)),
    };
}

export function CheckEmailBodyResultsToJSON(json: any): CheckEmailBodyResults {
    return CheckEmailBodyResultsToJSONTyped(json, false);
}

export function CheckEmailBodyResultsToJSONTyped(value?: CheckEmailBodyResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hasIssues': value['hasIssues'],
        'linkIssues': ((value['linkIssues'] as Array<any>).map(LinkIssueToJSON)),
        'imageIssues': ((value['imageIssues'] as Array<any>).map(ImageIssueToJSON)),
        'spellingIssues': ((value['spellingIssues'] as Array<any>).map(SpellingIssueToJSON)),
    };
}

