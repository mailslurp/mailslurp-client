/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PageableObject } from './PageableObject';
import {
    PageableObjectFromJSON,
    PageableObjectFromJSONTyped,
    PageableObjectToJSON,
    PageableObjectToJSONTyped,
} from './PageableObject';
import type { InboxReplierDto } from './InboxReplierDto';
import {
    InboxReplierDtoFromJSON,
    InboxReplierDtoFromJSONTyped,
    InboxReplierDtoToJSON,
    InboxReplierDtoToJSONTyped,
} from './InboxReplierDto';
import type { SortObject } from './SortObject';
import {
    SortObjectFromJSON,
    SortObjectFromJSONTyped,
    SortObjectToJSON,
    SortObjectToJSONTyped,
} from './SortObject';

/**
 * Paginated inbox replier results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls.
 * @export
 * @interface PageInboxReplierDto
 */
export interface PageInboxReplierDto {
    /**
     * 
     * @type {Array<InboxReplierDto>}
     * @memberof PageInboxReplierDto
     */
    content?: Array<InboxReplierDto>;
    /**
     * 
     * @type {PageableObject}
     * @memberof PageInboxReplierDto
     */
    pageable?: PageableObject;
    /**
     * 
     * @type {number}
     * @memberof PageInboxReplierDto
     */
    totalPages: number;
    /**
     * 
     * @type {number}
     * @memberof PageInboxReplierDto
     */
    totalElements: number;
    /**
     * 
     * @type {boolean}
     * @memberof PageInboxReplierDto
     */
    last?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PageInboxReplierDto
     */
    numberOfElements?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PageInboxReplierDto
     */
    first?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PageInboxReplierDto
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof PageInboxReplierDto
     */
    number?: number;
    /**
     * 
     * @type {Array<SortObject>}
     * @memberof PageInboxReplierDto
     */
    sort?: Array<SortObject>;
    /**
     * 
     * @type {boolean}
     * @memberof PageInboxReplierDto
     */
    empty?: boolean;
}

/**
 * Check if a given object implements the PageInboxReplierDto interface.
 */
export function instanceOfPageInboxReplierDto(value: object): value is PageInboxReplierDto {
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('totalElements' in value) || value['totalElements'] === undefined) return false;
    return true;
}

export function PageInboxReplierDtoFromJSON(json: any): PageInboxReplierDto {
    return PageInboxReplierDtoFromJSONTyped(json, false);
}

export function PageInboxReplierDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageInboxReplierDto {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(InboxReplierDtoFromJSON)),
        'pageable': json['pageable'] == null ? undefined : PageableObjectFromJSON(json['pageable']),
        'totalPages': json['totalPages'],
        'totalElements': json['totalElements'],
        'last': json['last'] == null ? undefined : json['last'],
        'numberOfElements': json['numberOfElements'] == null ? undefined : json['numberOfElements'],
        'first': json['first'] == null ? undefined : json['first'],
        'size': json['size'] == null ? undefined : json['size'],
        'number': json['number'] == null ? undefined : json['number'],
        'sort': json['sort'] == null ? undefined : ((json['sort'] as Array<any>).map(SortObjectFromJSON)),
        'empty': json['empty'] == null ? undefined : json['empty'],
    };
}

export function PageInboxReplierDtoToJSON(json: any): PageInboxReplierDto {
    return PageInboxReplierDtoToJSONTyped(json, false);
}

export function PageInboxReplierDtoToJSONTyped(value?: PageInboxReplierDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(InboxReplierDtoToJSON)),
        'pageable': PageableObjectToJSON(value['pageable']),
        'totalPages': value['totalPages'],
        'totalElements': value['totalElements'],
        'last': value['last'],
        'numberOfElements': value['numberOfElements'],
        'first': value['first'],
        'size': value['size'],
        'number': value['number'],
        'sort': value['sort'] == null ? undefined : ((value['sort'] as Array<any>).map(SortObjectToJSON)),
        'empty': value['empty'],
    };
}

