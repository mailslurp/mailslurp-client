/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImapServerFetchItem } from './ImapServerFetchItem';
import {
    ImapServerFetchItemFromJSON,
    ImapServerFetchItemFromJSONTyped,
    ImapServerFetchItemToJSON,
    ImapServerFetchItemToJSONTyped,
} from './ImapServerFetchItem';

/**
 * IMAP fetch email result
 * @export
 * @interface ImapServerFetchResult
 */
export interface ImapServerFetchResult {
    /**
     * 
     * @type {ImapServerFetchItem}
     * @memberof ImapServerFetchResult
     */
    result?: ImapServerFetchItem | null;
}

/**
 * Check if a given object implements the ImapServerFetchResult interface.
 */
export function instanceOfImapServerFetchResult(value: object): value is ImapServerFetchResult {
    return true;
}

export function ImapServerFetchResultFromJSON(json: any): ImapServerFetchResult {
    return ImapServerFetchResultFromJSONTyped(json, false);
}

export function ImapServerFetchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImapServerFetchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : ImapServerFetchItemFromJSON(json['result']),
    };
}

export function ImapServerFetchResultToJSON(json: any): ImapServerFetchResult {
    return ImapServerFetchResultToJSONTyped(json, false);
}

export function ImapServerFetchResultToJSONTyped(value?: ImapServerFetchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': ImapServerFetchItemToJSON(value['result']),
    };
}

