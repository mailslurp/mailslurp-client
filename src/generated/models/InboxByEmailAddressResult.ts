/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Result of search for inbox by email address
 * @export
 * @interface InboxByEmailAddressResult
 */
export interface InboxByEmailAddressResult {
    /**
     * 
     * @type {string}
     * @memberof InboxByEmailAddressResult
     */
    inboxId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof InboxByEmailAddressResult
     */
    _exists: boolean;
}

/**
 * Check if a given object implements the InboxByEmailAddressResult interface.
 */
export function instanceOfInboxByEmailAddressResult(value: object): value is InboxByEmailAddressResult {
    if (!('_exists' in value) || value['_exists'] === undefined) return false;
    return true;
}

export function InboxByEmailAddressResultFromJSON(json: any): InboxByEmailAddressResult {
    return InboxByEmailAddressResultFromJSONTyped(json, false);
}

export function InboxByEmailAddressResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): InboxByEmailAddressResult {
    if (json == null) {
        return json;
    }
    return {
        
        'inboxId': json['inboxId'] == null ? undefined : json['inboxId'],
        '_exists': json['exists'],
    };
}

export function InboxByEmailAddressResultToJSON(json: any): InboxByEmailAddressResult {
    return InboxByEmailAddressResultToJSONTyped(json, false);
}

export function InboxByEmailAddressResultToJSONTyped(value?: InboxByEmailAddressResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'inboxId': value['inboxId'],
        'exists': value['_exists'],
    };
}

