/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PhonePlanAvailabilityItem
 */
export interface PhonePlanAvailabilityItem {
    /**
     * 
     * @type {string}
     * @memberof PhonePlanAvailabilityItem
     */
    phoneCountry: PhonePlanAvailabilityItemPhoneCountryEnum;
    /**
     * 
     * @type {string}
     * @memberof PhonePlanAvailabilityItem
     */
    availabilityStatus: PhonePlanAvailabilityItemAvailabilityStatusEnum;
}


/**
 * @export
 */
export const PhonePlanAvailabilityItemPhoneCountryEnum = {
    US: 'US',
    GB: 'GB',
    AU: 'AU'
} as const;
export type PhonePlanAvailabilityItemPhoneCountryEnum = typeof PhonePlanAvailabilityItemPhoneCountryEnum[keyof typeof PhonePlanAvailabilityItemPhoneCountryEnum];

/**
 * @export
 */
export const PhonePlanAvailabilityItemAvailabilityStatusEnum = {
    AVAILABLE: 'AVAILABLE',
    NON_MATCHING_SUBSCRIPTION_CURRENCY: 'NON_MATCHING_SUBSCRIPTION_CURRENCY',
    NON_MATCHING_SUBSCRIPTION_TYPE: 'NON_MATCHING_SUBSCRIPTION_TYPE',
    ALREADY_ASSIGNED: 'ALREADY_ASSIGNED'
} as const;
export type PhonePlanAvailabilityItemAvailabilityStatusEnum = typeof PhonePlanAvailabilityItemAvailabilityStatusEnum[keyof typeof PhonePlanAvailabilityItemAvailabilityStatusEnum];


/**
 * Check if a given object implements the PhonePlanAvailabilityItem interface.
 */
export function instanceOfPhonePlanAvailabilityItem(value: object): value is PhonePlanAvailabilityItem {
    if (!('phoneCountry' in value) || value['phoneCountry'] === undefined) return false;
    if (!('availabilityStatus' in value) || value['availabilityStatus'] === undefined) return false;
    return true;
}

export function PhonePlanAvailabilityItemFromJSON(json: any): PhonePlanAvailabilityItem {
    return PhonePlanAvailabilityItemFromJSONTyped(json, false);
}

export function PhonePlanAvailabilityItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhonePlanAvailabilityItem {
    if (json == null) {
        return json;
    }
    return {
        
        'phoneCountry': json['phoneCountry'],
        'availabilityStatus': json['availabilityStatus'],
    };
}

export function PhonePlanAvailabilityItemToJSON(json: any): PhonePlanAvailabilityItem {
    return PhonePlanAvailabilityItemToJSONTyped(json, false);
}

export function PhonePlanAvailabilityItemToJSONTyped(value?: PhonePlanAvailabilityItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'phoneCountry': value['phoneCountry'],
        'availabilityStatus': value['availabilityStatus'],
    };
}

