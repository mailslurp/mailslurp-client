/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface PhoneNumberValidationDto
 */
export interface PhoneNumberValidationDto {
  /**
   *
   * @type {string}
   * @memberof PhoneNumberValidationDto
   */
  countryCode?: string;
  /**
   *
   * @type {string}
   * @memberof PhoneNumberValidationDto
   */
  countryPrefix?: string;
  /**
   *
   * @type {string}
   * @memberof PhoneNumberValidationDto
   */
  phoneNumber: string;
  /**
   *
   * @type {boolean}
   * @memberof PhoneNumberValidationDto
   */
  isValid: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof PhoneNumberValidationDto
   */
  validationErrors?: Array<string>;
}

export function PhoneNumberValidationDtoFromJSON(
  json: any
): PhoneNumberValidationDto {
  return PhoneNumberValidationDtoFromJSONTyped(json, false);
}

export function PhoneNumberValidationDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PhoneNumberValidationDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    countryCode: !exists(json, 'countryCode') ? undefined : json['countryCode'],
    countryPrefix: !exists(json, 'countryPrefix')
      ? undefined
      : json['countryPrefix'],
    phoneNumber: json['phoneNumber'],
    isValid: json['isValid'],
    validationErrors: !exists(json, 'validationErrors')
      ? undefined
      : json['validationErrors'],
  };
}

export function PhoneNumberValidationDtoToJSON(
  value?: PhoneNumberValidationDto | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    countryCode: value.countryCode,
    countryPrefix: value.countryPrefix,
    phoneNumber: value.phoneNumber,
    isValid: value.isValid,
    validationErrors: value.validationErrors,
  };
}
