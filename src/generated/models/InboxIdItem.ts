/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Inbox ID and email address pair
 * @export
 * @interface InboxIdItem
 */
export interface InboxIdItem {
    /**
     * 
     * @type {string}
     * @memberof InboxIdItem
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof InboxIdItem
     */
    emailAddress: string;
}

/**
 * Check if a given object implements the InboxIdItem interface.
 */
export function instanceOfInboxIdItem(value: object): value is InboxIdItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('emailAddress' in value) || value['emailAddress'] === undefined) return false;
    return true;
}

export function InboxIdItemFromJSON(json: any): InboxIdItem {
    return InboxIdItemFromJSONTyped(json, false);
}

export function InboxIdItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): InboxIdItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'emailAddress': json['emailAddress'],
    };
}

export function InboxIdItemToJSON(json: any): InboxIdItem {
    return InboxIdItemToJSONTyped(json, false);
}

export function InboxIdItemToJSONTyped(value?: InboxIdItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'emailAddress': value['emailAddress'],
    };
}

