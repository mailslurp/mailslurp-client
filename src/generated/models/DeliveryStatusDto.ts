/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeliveryStatusDto
 */
export interface DeliveryStatusDto {
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    sentId?: string;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    remoteMtaIp?: string;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    inboxId?: string;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    reportingMta?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DeliveryStatusDto
     */
    recipients?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    smtpResponse?: string;
    /**
     * 
     * @type {number}
     * @memberof DeliveryStatusDto
     */
    smtpStatusCode?: number;
    /**
     * 
     * @type {number}
     * @memberof DeliveryStatusDto
     */
    processingTimeMillis?: number;
    /**
     * 
     * @type {Date}
     * @memberof DeliveryStatusDto
     */
    received?: Date;
    /**
     * 
     * @type {string}
     * @memberof DeliveryStatusDto
     */
    subject?: string;
    /**
     * 
     * @type {Date}
     * @memberof DeliveryStatusDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof DeliveryStatusDto
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the DeliveryStatusDto interface.
 */
export function instanceOfDeliveryStatusDto(value: object): value is DeliveryStatusDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DeliveryStatusDtoFromJSON(json: any): DeliveryStatusDto {
    return DeliveryStatusDtoFromJSONTyped(json, false);
}

export function DeliveryStatusDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeliveryStatusDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'sentId': json['sentId'] == null ? undefined : json['sentId'],
        'remoteMtaIp': json['remoteMtaIp'] == null ? undefined : json['remoteMtaIp'],
        'inboxId': json['inboxId'] == null ? undefined : json['inboxId'],
        'reportingMta': json['reportingMta'] == null ? undefined : json['reportingMta'],
        'recipients': json['recipients'] == null ? undefined : json['recipients'],
        'smtpResponse': json['smtpResponse'] == null ? undefined : json['smtpResponse'],
        'smtpStatusCode': json['smtpStatusCode'] == null ? undefined : json['smtpStatusCode'],
        'processingTimeMillis': json['processingTimeMillis'] == null ? undefined : json['processingTimeMillis'],
        'received': json['received'] == null ? undefined : (new Date(json['received'])),
        'subject': json['subject'] == null ? undefined : json['subject'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function DeliveryStatusDtoToJSON(json: any): DeliveryStatusDto {
    return DeliveryStatusDtoToJSONTyped(json, false);
}

export function DeliveryStatusDtoToJSONTyped(value?: DeliveryStatusDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'sentId': value['sentId'],
        'remoteMtaIp': value['remoteMtaIp'],
        'inboxId': value['inboxId'],
        'reportingMta': value['reportingMta'],
        'recipients': value['recipients'],
        'smtpResponse': value['smtpResponse'],
        'smtpStatusCode': value['smtpStatusCode'],
        'processingTimeMillis': value['processingTimeMillis'],
        'received': value['received'] == null ? undefined : ((value['received']).toISOString()),
        'subject': value['subject'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

