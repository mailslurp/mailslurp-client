/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PageableObject } from './PageableObject';
import {
    PageableObjectFromJSON,
    PageableObjectFromJSONTyped,
    PageableObjectToJSON,
    PageableObjectToJSONTyped,
} from './PageableObject';
import type { GuestPortalUserProjection } from './GuestPortalUserProjection';
import {
    GuestPortalUserProjectionFromJSON,
    GuestPortalUserProjectionFromJSONTyped,
    GuestPortalUserProjectionToJSON,
    GuestPortalUserProjectionToJSONTyped,
} from './GuestPortalUserProjection';
import type { SortObject } from './SortObject';
import {
    SortObjectFromJSON,
    SortObjectFromJSONTyped,
    SortObjectToJSON,
    SortObjectToJSONTyped,
} from './SortObject';

/**
 * Paginated guest portal users
 * @export
 * @interface PageGuestPortalUsers
 */
export interface PageGuestPortalUsers {
    /**
     * 
     * @type {Array<GuestPortalUserProjection>}
     * @memberof PageGuestPortalUsers
     */
    content?: Array<GuestPortalUserProjection>;
    /**
     * 
     * @type {PageableObject}
     * @memberof PageGuestPortalUsers
     */
    pageable?: PageableObject;
    /**
     * 
     * @type {number}
     * @memberof PageGuestPortalUsers
     */
    totalPages: number;
    /**
     * 
     * @type {number}
     * @memberof PageGuestPortalUsers
     */
    totalElements: number;
    /**
     * 
     * @type {boolean}
     * @memberof PageGuestPortalUsers
     */
    last?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PageGuestPortalUsers
     */
    numberOfElements?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PageGuestPortalUsers
     */
    first?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PageGuestPortalUsers
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof PageGuestPortalUsers
     */
    number?: number;
    /**
     * 
     * @type {Array<SortObject>}
     * @memberof PageGuestPortalUsers
     */
    sort?: Array<SortObject>;
    /**
     * 
     * @type {boolean}
     * @memberof PageGuestPortalUsers
     */
    empty?: boolean;
}

/**
 * Check if a given object implements the PageGuestPortalUsers interface.
 */
export function instanceOfPageGuestPortalUsers(value: object): value is PageGuestPortalUsers {
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('totalElements' in value) || value['totalElements'] === undefined) return false;
    return true;
}

export function PageGuestPortalUsersFromJSON(json: any): PageGuestPortalUsers {
    return PageGuestPortalUsersFromJSONTyped(json, false);
}

export function PageGuestPortalUsersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageGuestPortalUsers {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(GuestPortalUserProjectionFromJSON)),
        'pageable': json['pageable'] == null ? undefined : PageableObjectFromJSON(json['pageable']),
        'totalPages': json['totalPages'],
        'totalElements': json['totalElements'],
        'last': json['last'] == null ? undefined : json['last'],
        'numberOfElements': json['numberOfElements'] == null ? undefined : json['numberOfElements'],
        'first': json['first'] == null ? undefined : json['first'],
        'size': json['size'] == null ? undefined : json['size'],
        'number': json['number'] == null ? undefined : json['number'],
        'sort': json['sort'] == null ? undefined : ((json['sort'] as Array<any>).map(SortObjectFromJSON)),
        'empty': json['empty'] == null ? undefined : json['empty'],
    };
}

export function PageGuestPortalUsersToJSON(json: any): PageGuestPortalUsers {
    return PageGuestPortalUsersToJSONTyped(json, false);
}

export function PageGuestPortalUsersToJSONTyped(value?: PageGuestPortalUsers | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(GuestPortalUserProjectionToJSON)),
        'pageable': PageableObjectToJSON(value['pageable']),
        'totalPages': value['totalPages'],
        'totalElements': value['totalElements'],
        'last': value['last'],
        'numberOfElements': value['numberOfElements'],
        'first': value['first'],
        'size': value['size'],
        'number': value['number'],
        'sort': value['sort'] == null ? undefined : ((value['sort'] as Array<any>).map(SortObjectToJSON)),
        'empty': value['empty'],
    };
}

