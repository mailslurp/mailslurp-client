/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ImapServerStatusOptions
 */
export interface ImapServerStatusOptions {
  /**
   *
   * @type {string}
   * @memberof ImapServerStatusOptions
   */
  name?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof ImapServerStatusOptions
   */
  statusItems?: Array<ImapServerStatusOptionsStatusItemsEnum>;
}

/**
 * @export
 * @enum {string}
 */
export enum ImapServerStatusOptionsStatusItemsEnum {
  MESSAGES = 'MESSAGES',
  RECENT = 'RECENT',
  UIDNEXT = 'UIDNEXT',
  UIDVALIDITY = 'UIDVALIDITY',
  UNSEEN = 'UNSEEN',
  APPENDLIMIT = 'APPENDLIMIT',
}

export function ImapServerStatusOptionsFromJSON(
  json: any
): ImapServerStatusOptions {
  return ImapServerStatusOptionsFromJSONTyped(json, false);
}

export function ImapServerStatusOptionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ImapServerStatusOptions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, 'name') ? undefined : json['name'],
    statusItems: !exists(json, 'statusItems') ? undefined : json['statusItems'],
  };
}

export function ImapServerStatusOptionsToJSON(
  value?: ImapServerStatusOptions | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    statusItems: value.statusItems,
  };
}
