/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailThreadItemProjection } from './EmailThreadItemProjection';
import {
    EmailThreadItemProjectionFromJSON,
    EmailThreadItemProjectionFromJSONTyped,
    EmailThreadItemProjectionToJSON,
    EmailThreadItemProjectionToJSONTyped,
} from './EmailThreadItemProjection';

/**
 * 
 * @export
 * @interface EmailThreadItemsDto
 */
export interface EmailThreadItemsDto {
    /**
     * 
     * @type {Array<EmailThreadItemProjection>}
     * @memberof EmailThreadItemsDto
     */
    items: Array<EmailThreadItemProjection>;
}

/**
 * Check if a given object implements the EmailThreadItemsDto interface.
 */
export function instanceOfEmailThreadItemsDto(value: object): value is EmailThreadItemsDto {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function EmailThreadItemsDtoFromJSON(json: any): EmailThreadItemsDto {
    return EmailThreadItemsDtoFromJSONTyped(json, false);
}

export function EmailThreadItemsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailThreadItemsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(EmailThreadItemProjectionFromJSON)),
    };
}

export function EmailThreadItemsDtoToJSON(json: any): EmailThreadItemsDto {
    return EmailThreadItemsDtoToJSONTyped(json, false);
}

export function EmailThreadItemsDtoToJSONTyped(value?: EmailThreadItemsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(EmailThreadItemProjectionToJSON)),
    };
}

