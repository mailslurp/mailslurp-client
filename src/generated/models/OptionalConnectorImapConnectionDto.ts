/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConnectorImapConnectionDto } from './ConnectorImapConnectionDto';
import {
    ConnectorImapConnectionDtoFromJSON,
    ConnectorImapConnectionDtoFromJSONTyped,
    ConnectorImapConnectionDtoToJSON,
    ConnectorImapConnectionDtoToJSONTyped,
} from './ConnectorImapConnectionDto';

/**
 * 
 * @export
 * @interface OptionalConnectorImapConnectionDto
 */
export interface OptionalConnectorImapConnectionDto {
    /**
     * 
     * @type {boolean}
     * @memberof OptionalConnectorImapConnectionDto
     */
    present: boolean;
    /**
     * 
     * @type {ConnectorImapConnectionDto}
     * @memberof OptionalConnectorImapConnectionDto
     */
    result?: ConnectorImapConnectionDto;
}

/**
 * Check if a given object implements the OptionalConnectorImapConnectionDto interface.
 */
export function instanceOfOptionalConnectorImapConnectionDto(value: object): value is OptionalConnectorImapConnectionDto {
    if (!('present' in value) || value['present'] === undefined) return false;
    return true;
}

export function OptionalConnectorImapConnectionDtoFromJSON(json: any): OptionalConnectorImapConnectionDto {
    return OptionalConnectorImapConnectionDtoFromJSONTyped(json, false);
}

export function OptionalConnectorImapConnectionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptionalConnectorImapConnectionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'present': json['present'],
        'result': json['result'] == null ? undefined : ConnectorImapConnectionDtoFromJSON(json['result']),
    };
}

export function OptionalConnectorImapConnectionDtoToJSON(json: any): OptionalConnectorImapConnectionDto {
    return OptionalConnectorImapConnectionDtoToJSONTyped(json, false);
}

export function OptionalConnectorImapConnectionDtoToJSONTyped(value?: OptionalConnectorImapConnectionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'present': value['present'],
        'result': ConnectorImapConnectionDtoToJSON(value['result']),
    };
}

