/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GuestPortalUserDto } from './GuestPortalUserDto';
import {
    GuestPortalUserDtoFromJSON,
    GuestPortalUserDtoFromJSONTyped,
    GuestPortalUserDtoToJSON,
    GuestPortalUserDtoToJSONTyped,
} from './GuestPortalUserDto';

/**
 * 
 * @export
 * @interface GuestPortalUserCreateDto
 */
export interface GuestPortalUserCreateDto {
    /**
     * 
     * @type {GuestPortalUserDto}
     * @memberof GuestPortalUserCreateDto
     */
    guest: GuestPortalUserDto;
    /**
     * 
     * @type {string}
     * @memberof GuestPortalUserCreateDto
     */
    password: string;
}

/**
 * Check if a given object implements the GuestPortalUserCreateDto interface.
 */
export function instanceOfGuestPortalUserCreateDto(value: object): value is GuestPortalUserCreateDto {
    if (!('guest' in value) || value['guest'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function GuestPortalUserCreateDtoFromJSON(json: any): GuestPortalUserCreateDto {
    return GuestPortalUserCreateDtoFromJSONTyped(json, false);
}

export function GuestPortalUserCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestPortalUserCreateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'guest': GuestPortalUserDtoFromJSON(json['guest']),
        'password': json['password'],
    };
}

export function GuestPortalUserCreateDtoToJSON(json: any): GuestPortalUserCreateDto {
    return GuestPortalUserCreateDtoToJSONTyped(json, false);
}

export function GuestPortalUserCreateDtoToJSONTyped(value?: GuestPortalUserCreateDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'guest': GuestPortalUserDtoToJSON(value['guest']),
        'password': value['password'],
    };
}

