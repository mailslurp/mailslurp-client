/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Byte array request body
 * @export
 * @interface InlineObject1
 */
export interface InlineObject1 {
  /**
   *
   * @type {number}
   * @memberof InlineObject1
   */
  _short?: number;
  /**
   *
   * @type {string}
   * @memberof InlineObject1
   */
  _char?: string;
  /**
   *
   * @type {number}
   * @memberof InlineObject1
   */
  _int?: number;
  /**
   *
   * @type {number}
   * @memberof InlineObject1
   */
  _long?: number;
  /**
   *
   * @type {number}
   * @memberof InlineObject1
   */
  _float?: number;
  /**
   *
   * @type {number}
   * @memberof InlineObject1
   */
  _double?: number;
  /**
   *
   * @type {boolean}
   * @memberof InlineObject1
   */
  direct?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof InlineObject1
   */
  readOnly?: boolean;
}

export function InlineObject1FromJSON(json: any): InlineObject1 {
  return InlineObject1FromJSONTyped(json, false);
}

export function InlineObject1FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): InlineObject1 {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    _short: !exists(json, 'short') ? undefined : json['short'],
    _char: !exists(json, 'char') ? undefined : json['char'],
    _int: !exists(json, 'int') ? undefined : json['int'],
    _long: !exists(json, 'long') ? undefined : json['long'],
    _float: !exists(json, 'float') ? undefined : json['float'],
    _double: !exists(json, 'double') ? undefined : json['double'],
    direct: !exists(json, 'direct') ? undefined : json['direct'],
    readOnly: !exists(json, 'readOnly') ? undefined : json['readOnly'],
  };
}

export function InlineObject1ToJSON(value?: InlineObject1 | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    short: value._short,
    char: value._char,
    int: value._int,
    long: value._long,
    float: value._float,
    double: value._double,
    direct: value.direct,
    readOnly: value.readOnly,
  };
}
