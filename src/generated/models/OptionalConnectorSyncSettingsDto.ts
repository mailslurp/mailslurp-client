/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConnectorSyncSettingsDto } from './ConnectorSyncSettingsDto';
import {
    ConnectorSyncSettingsDtoFromJSON,
    ConnectorSyncSettingsDtoFromJSONTyped,
    ConnectorSyncSettingsDtoToJSON,
    ConnectorSyncSettingsDtoToJSONTyped,
} from './ConnectorSyncSettingsDto';

/**
 * 
 * @export
 * @interface OptionalConnectorSyncSettingsDto
 */
export interface OptionalConnectorSyncSettingsDto {
    /**
     * 
     * @type {boolean}
     * @memberof OptionalConnectorSyncSettingsDto
     */
    present: boolean;
    /**
     * 
     * @type {ConnectorSyncSettingsDto}
     * @memberof OptionalConnectorSyncSettingsDto
     */
    result?: ConnectorSyncSettingsDto;
}

/**
 * Check if a given object implements the OptionalConnectorSyncSettingsDto interface.
 */
export function instanceOfOptionalConnectorSyncSettingsDto(value: object): value is OptionalConnectorSyncSettingsDto {
    if (!('present' in value) || value['present'] === undefined) return false;
    return true;
}

export function OptionalConnectorSyncSettingsDtoFromJSON(json: any): OptionalConnectorSyncSettingsDto {
    return OptionalConnectorSyncSettingsDtoFromJSONTyped(json, false);
}

export function OptionalConnectorSyncSettingsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptionalConnectorSyncSettingsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'present': json['present'],
        'result': json['result'] == null ? undefined : ConnectorSyncSettingsDtoFromJSON(json['result']),
    };
}

export function OptionalConnectorSyncSettingsDtoToJSON(json: any): OptionalConnectorSyncSettingsDto {
    return OptionalConnectorSyncSettingsDtoToJSONTyped(json, false);
}

export function OptionalConnectorSyncSettingsDtoToJSONTyped(value?: OptionalConnectorSyncSettingsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'present': value['present'],
        'result': ConnectorSyncSettingsDtoToJSON(value['result']),
    };
}

