/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SmsPreview
 */
export interface SmsPreview {
    /**
     * 
     * @type {string}
     * @memberof SmsPreview
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SmsPreview
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof SmsPreview
     */
    body: string;
    /**
     * 
     * @type {string}
     * @memberof SmsPreview
     */
    phoneNumber: string;
    /**
     * 
     * @type {string}
     * @memberof SmsPreview
     */
    fromNumber: string;
    /**
     * 
     * @type {Date}
     * @memberof SmsPreview
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the SmsPreview interface.
 */
export function instanceOfSmsPreview(value: object): value is SmsPreview {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('body' in value) || value['body'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('fromNumber' in value) || value['fromNumber'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function SmsPreviewFromJSON(json: any): SmsPreview {
    return SmsPreviewFromJSONTyped(json, false);
}

export function SmsPreviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmsPreview {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'body': json['body'],
        'phoneNumber': json['phoneNumber'],
        'fromNumber': json['fromNumber'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function SmsPreviewToJSON(json: any): SmsPreview {
    return SmsPreviewToJSONTyped(json, false);
}

export function SmsPreviewToJSONTyped(value?: SmsPreview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'body': value['body'],
        'phoneNumber': value['phoneNumber'],
        'fromNumber': value['fromNumber'],
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

