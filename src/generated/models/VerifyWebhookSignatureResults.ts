/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VerifyWebhookSignatureResults
 */
export interface VerifyWebhookSignatureResults {
    /**
     * 
     * @type {boolean}
     * @memberof VerifyWebhookSignatureResults
     */
    isValid: boolean;
}

/**
 * Check if a given object implements the VerifyWebhookSignatureResults interface.
 */
export function instanceOfVerifyWebhookSignatureResults(value: object): value is VerifyWebhookSignatureResults {
    if (!('isValid' in value) || value['isValid'] === undefined) return false;
    return true;
}

export function VerifyWebhookSignatureResultsFromJSON(json: any): VerifyWebhookSignatureResults {
    return VerifyWebhookSignatureResultsFromJSONTyped(json, false);
}

export function VerifyWebhookSignatureResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyWebhookSignatureResults {
    if (json == null) {
        return json;
    }
    return {
        
        'isValid': json['isValid'],
    };
}

export function VerifyWebhookSignatureResultsToJSON(json: any): VerifyWebhookSignatureResults {
    return VerifyWebhookSignatureResultsToJSONTyped(json, false);
}

export function VerifyWebhookSignatureResultsToJSONTyped(value?: VerifyWebhookSignatureResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'isValid': value['isValid'],
    };
}

