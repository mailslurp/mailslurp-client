/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data for contact group
 * @export
 * @interface GroupProjection
 */
export interface GroupProjection {
    /**
     * 
     * @type {Date}
     * @memberof GroupProjection
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof GroupProjection
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GroupProjection
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GroupProjection
     */
    description?: string | null;
}

/**
 * Check if a given object implements the GroupProjection interface.
 */
export function instanceOfGroupProjection(value: object): value is GroupProjection {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GroupProjectionFromJSON(json: any): GroupProjection {
    return GroupProjectionFromJSONTyped(json, false);
}

export function GroupProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'name': json['name'],
        'id': json['id'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function GroupProjectionToJSON(json: any): GroupProjection {
    return GroupProjectionToJSONTyped(json, false);
}

export function GroupProjectionToJSONTyped(value?: GroupProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': ((value['createdAt']).toISOString()),
        'name': value['name'],
        'id': value['id'],
        'description': value['description'],
    };
}

