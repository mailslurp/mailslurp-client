/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Phone number projection
 * @export
 * @interface PhoneNumberProjection
 */
export interface PhoneNumberProjection {
    /**
     * 
     * @type {Date}
     * @memberof PhoneNumberProjection
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PhoneNumberProjection
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof PhoneNumberProjection
     */
    phoneNumber: string;
    /**
     * 
     * @type {string}
     * @memberof PhoneNumberProjection
     */
    phoneCountry: PhoneNumberProjectionPhoneCountryEnum;
    /**
     * 
     * @type {string}
     * @memberof PhoneNumberProjection
     */
    id: string;
}


/**
 * @export
 */
export const PhoneNumberProjectionPhoneCountryEnum = {
    US: 'US',
    GB: 'GB',
    AU: 'AU'
} as const;
export type PhoneNumberProjectionPhoneCountryEnum = typeof PhoneNumberProjectionPhoneCountryEnum[keyof typeof PhoneNumberProjectionPhoneCountryEnum];


/**
 * Check if a given object implements the PhoneNumberProjection interface.
 */
export function instanceOfPhoneNumberProjection(value: object): value is PhoneNumberProjection {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('phoneCountry' in value) || value['phoneCountry'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function PhoneNumberProjectionFromJSON(json: any): PhoneNumberProjection {
    return PhoneNumberProjectionFromJSONTyped(json, false);
}

export function PhoneNumberProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhoneNumberProjection {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'userId': json['userId'],
        'phoneNumber': json['phoneNumber'],
        'phoneCountry': json['phoneCountry'],
        'id': json['id'],
    };
}

export function PhoneNumberProjectionToJSON(json: any): PhoneNumberProjection {
    return PhoneNumberProjectionToJSONTyped(json, false);
}

export function PhoneNumberProjectionToJSONTyped(value?: PhoneNumberProjection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': ((value['createdAt']).toISOString()),
        'userId': value['userId'],
        'phoneNumber': value['phoneNumber'],
        'phoneCountry': value['phoneCountry'],
        'id': value['id'],
    };
}

