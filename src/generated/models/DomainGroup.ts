/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  DomainInformation,
  DomainInformationFromJSON,
  DomainInformationFromJSONTyped,
  DomainInformationToJSON,
} from './';

/**
 *
 * @export
 * @interface DomainGroup
 */
export interface DomainGroup {
  /**
   *
   * @type {string}
   * @memberof DomainGroup
   */
  label: DomainGroupLabelEnum;
  /**
   *
   * @type {Array<DomainInformation>}
   * @memberof DomainGroup
   */
  domains: Array<DomainInformation>;
}

/**
 * @export
 * @enum {string}
 */
export enum DomainGroupLabelEnum {
  DEFAULT = 'DEFAULT',
  DOMAIN_POOL = 'DOMAIN_POOL',
  CUSTOM = 'CUSTOM',
}

export function DomainGroupFromJSON(json: any): DomainGroup {
  return DomainGroupFromJSONTyped(json, false);
}

export function DomainGroupFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DomainGroup {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    label: json['label'],
    domains: (json['domains'] as Array<any>).map(DomainInformationFromJSON),
  };
}

export function DomainGroupToJSON(value?: DomainGroup | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    label: value.label,
    domains: (value.domains as Array<any>).map(DomainInformationToJSON),
  };
}
