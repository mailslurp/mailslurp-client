/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ConnectorSyncRequestResultExceptionCauseStackTrace
 */
export interface ConnectorSyncRequestResultExceptionCauseStackTrace {
  /**
   *
   * @type {string}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  classLoaderName?: string;
  /**
   *
   * @type {string}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  moduleName?: string;
  /**
   *
   * @type {string}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  moduleVersion?: string;
  /**
   *
   * @type {string}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  methodName?: string;
  /**
   *
   * @type {string}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  fileName?: string;
  /**
   *
   * @type {number}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  lineNumber?: number;
  /**
   *
   * @type {boolean}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  nativeMethod?: boolean;
  /**
   *
   * @type {string}
   * @memberof ConnectorSyncRequestResultExceptionCauseStackTrace
   */
  className?: string;
}

export function ConnectorSyncRequestResultExceptionCauseStackTraceFromJSON(
  json: any
): ConnectorSyncRequestResultExceptionCauseStackTrace {
  return ConnectorSyncRequestResultExceptionCauseStackTraceFromJSONTyped(
    json,
    false
  );
}

export function ConnectorSyncRequestResultExceptionCauseStackTraceFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ConnectorSyncRequestResultExceptionCauseStackTrace {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    classLoaderName: !exists(json, 'classLoaderName')
      ? undefined
      : json['classLoaderName'],
    moduleName: !exists(json, 'moduleName') ? undefined : json['moduleName'],
    moduleVersion: !exists(json, 'moduleVersion')
      ? undefined
      : json['moduleVersion'],
    methodName: !exists(json, 'methodName') ? undefined : json['methodName'],
    fileName: !exists(json, 'fileName') ? undefined : json['fileName'],
    lineNumber: !exists(json, 'lineNumber') ? undefined : json['lineNumber'],
    nativeMethod: !exists(json, 'nativeMethod')
      ? undefined
      : json['nativeMethod'],
    className: !exists(json, 'className') ? undefined : json['className'],
  };
}

export function ConnectorSyncRequestResultExceptionCauseStackTraceToJSON(
  value?: ConnectorSyncRequestResultExceptionCauseStackTrace | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    classLoaderName: value.classLoaderName,
    moduleName: value.moduleName,
    moduleVersion: value.moduleVersion,
    methodName: value.methodName,
    fileName: value.fileName,
    lineNumber: value.lineNumber,
    nativeMethod: value.nativeMethod,
    className: value.className,
  };
}
