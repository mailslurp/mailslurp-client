"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfOptionalConnectorImapConnectionDto = instanceOfOptionalConnectorImapConnectionDto;
exports.OptionalConnectorImapConnectionDtoFromJSON = OptionalConnectorImapConnectionDtoFromJSON;
exports.OptionalConnectorImapConnectionDtoFromJSONTyped = OptionalConnectorImapConnectionDtoFromJSONTyped;
exports.OptionalConnectorImapConnectionDtoToJSON = OptionalConnectorImapConnectionDtoToJSON;
exports.OptionalConnectorImapConnectionDtoToJSONTyped = OptionalConnectorImapConnectionDtoToJSONTyped;
var ConnectorImapConnectionDto_1 = require("./ConnectorImapConnectionDto");
/**
 * Check if a given object implements the OptionalConnectorImapConnectionDto interface.
 */
function instanceOfOptionalConnectorImapConnectionDto(value) {
    if (!('present' in value) || value['present'] === undefined)
        return false;
    return true;
}
function OptionalConnectorImapConnectionDtoFromJSON(json) {
    return OptionalConnectorImapConnectionDtoFromJSONTyped(json, false);
}
function OptionalConnectorImapConnectionDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'present': json['present'],
        'result': json['result'] == null ? undefined : (0, ConnectorImapConnectionDto_1.ConnectorImapConnectionDtoFromJSON)(json['result']),
    };
}
function OptionalConnectorImapConnectionDtoToJSON(json) {
    return OptionalConnectorImapConnectionDtoToJSONTyped(json, false);
}
function OptionalConnectorImapConnectionDtoToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'present': value['present'],
        'result': (0, ConnectorImapConnectionDto_1.ConnectorImapConnectionDtoToJSON)(value['result']),
    };
}
