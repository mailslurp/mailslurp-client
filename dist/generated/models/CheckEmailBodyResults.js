"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCheckEmailBodyResults = instanceOfCheckEmailBodyResults;
exports.CheckEmailBodyResultsFromJSON = CheckEmailBodyResultsFromJSON;
exports.CheckEmailBodyResultsFromJSONTyped = CheckEmailBodyResultsFromJSONTyped;
exports.CheckEmailBodyResultsToJSON = CheckEmailBodyResultsToJSON;
exports.CheckEmailBodyResultsToJSONTyped = CheckEmailBodyResultsToJSONTyped;
var SpellingIssue_1 = require("./SpellingIssue");
var ImageIssue_1 = require("./ImageIssue");
var LinkIssue_1 = require("./LinkIssue");
/**
 * Check if a given object implements the CheckEmailBodyResults interface.
 */
function instanceOfCheckEmailBodyResults(value) {
    if (!('hasIssues' in value) || value['hasIssues'] === undefined)
        return false;
    if (!('linkIssues' in value) || value['linkIssues'] === undefined)
        return false;
    if (!('imageIssues' in value) || value['imageIssues'] === undefined)
        return false;
    if (!('spellingIssues' in value) || value['spellingIssues'] === undefined)
        return false;
    return true;
}
function CheckEmailBodyResultsFromJSON(json) {
    return CheckEmailBodyResultsFromJSONTyped(json, false);
}
function CheckEmailBodyResultsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'hasIssues': json['hasIssues'],
        'linkIssues': (json['linkIssues'].map(LinkIssue_1.LinkIssueFromJSON)),
        'imageIssues': (json['imageIssues'].map(ImageIssue_1.ImageIssueFromJSON)),
        'spellingIssues': (json['spellingIssues'].map(SpellingIssue_1.SpellingIssueFromJSON)),
    };
}
function CheckEmailBodyResultsToJSON(json) {
    return CheckEmailBodyResultsToJSONTyped(json, false);
}
function CheckEmailBodyResultsToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'hasIssues': value['hasIssues'],
        'linkIssues': (value['linkIssues'].map(LinkIssue_1.LinkIssueToJSON)),
        'imageIssues': (value['imageIssues'].map(ImageIssue_1.ImageIssueToJSON)),
        'spellingIssues': (value['spellingIssues'].map(SpellingIssue_1.SpellingIssueToJSON)),
    };
}
