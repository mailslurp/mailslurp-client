/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RecipientProjection } from './RecipientProjection';
/**
 * Recipients of original email in thread
 * @export
 * @interface EmailRecipientsProjection
 */
export interface EmailRecipientsProjection {
    /**
     *
     * @type {Array<RecipientProjection>}
     * @memberof EmailRecipientsProjection
     */
    to?: Array<RecipientProjection>;
    /**
     *
     * @type {Array<RecipientProjection>}
     * @memberof EmailRecipientsProjection
     */
    cc?: Array<RecipientProjection>;
    /**
     *
     * @type {Array<RecipientProjection>}
     * @memberof EmailRecipientsProjection
     */
    bcc?: Array<RecipientProjection>;
}
/**
 * Check if a given object implements the EmailRecipientsProjection interface.
 */
export declare function instanceOfEmailRecipientsProjection(value: object): value is EmailRecipientsProjection;
export declare function EmailRecipientsProjectionFromJSON(json: any): EmailRecipientsProjection;
export declare function EmailRecipientsProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailRecipientsProjection;
export declare function EmailRecipientsProjectionToJSON(json: any): EmailRecipientsProjection;
export declare function EmailRecipientsProjectionToJSONTyped(value?: EmailRecipientsProjection | null, ignoreDiscriminator?: boolean): any;
