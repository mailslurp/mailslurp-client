"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSentEmailDto = instanceOfSentEmailDto;
exports.SentEmailDtoFromJSON = SentEmailDtoFromJSON;
exports.SentEmailDtoFromJSONTyped = SentEmailDtoFromJSONTyped;
exports.SentEmailDtoToJSON = SentEmailDtoToJSON;
exports.SentEmailDtoToJSONTyped = SentEmailDtoToJSONTyped;
var Sender_1 = require("./Sender");
var EmailRecipients_1 = require("./EmailRecipients");
/**
 * Check if a given object implements the SentEmailDto interface.
 */
function instanceOfSentEmailDto(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('userId' in value) || value['userId'] === undefined)
        return false;
    if (!('inboxId' in value) || value['inboxId'] === undefined)
        return false;
    if (!('sentAt' in value) || value['sentAt'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    return true;
}
function SentEmailDtoFromJSON(json) {
    return SentEmailDtoFromJSONTyped(json, false);
}
function SentEmailDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'userId': json['userId'],
        'inboxId': json['inboxId'],
        'domainId': json['domainId'] == null ? undefined : json['domainId'],
        'to': json['to'] == null ? undefined : json['to'],
        'from': json['from'] == null ? undefined : json['from'],
        'sender': json['sender'] == null ? undefined : (0, Sender_1.SenderFromJSON)(json['sender']),
        'recipients': json['recipients'] == null ? undefined : (0, EmailRecipients_1.EmailRecipientsFromJSON)(json['recipients']),
        'replyTo': json['replyTo'] == null ? undefined : json['replyTo'],
        'cc': json['cc'] == null ? undefined : json['cc'],
        'bcc': json['bcc'] == null ? undefined : json['bcc'],
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'subject': json['subject'] == null ? undefined : json['subject'],
        'bodyMD5Hash': json['bodyMD5Hash'] == null ? undefined : json['bodyMD5Hash'],
        'body': json['body'] == null ? undefined : json['body'],
        'toContacts': json['toContacts'] == null ? undefined : json['toContacts'],
        'toGroup': json['toGroup'] == null ? undefined : json['toGroup'],
        'charset': json['charset'] == null ? undefined : json['charset'],
        'isHTML': json['isHTML'] == null ? undefined : json['isHTML'],
        'sentAt': (new Date(json['sentAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'pixelIds': json['pixelIds'] == null ? undefined : json['pixelIds'],
        'messageId': json['messageId'] == null ? undefined : json['messageId'],
        'messageIds': json['messageIds'] == null ? undefined : json['messageIds'],
        'virtualSend': json['virtualSend'] == null ? undefined : json['virtualSend'],
        'templateId': json['templateId'] == null ? undefined : json['templateId'],
        'templateVariables': json['templateVariables'] == null ? undefined : json['templateVariables'],
        'headers': json['headers'] == null ? undefined : json['headers'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
        'bodyExcerpt': json['bodyExcerpt'] == null ? undefined : json['bodyExcerpt'],
        'textExcerpt': json['textExcerpt'] == null ? undefined : json['textExcerpt'],
        'inReplyTo': json['inReplyTo'] == null ? undefined : json['inReplyTo'],
        'favourite': json['favourite'] == null ? undefined : json['favourite'],
        'html': json['html'] == null ? undefined : json['html'],
    };
}
function SentEmailDtoToJSON(json) {
    return SentEmailDtoToJSONTyped(json, false);
}
function SentEmailDtoToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'userId': value['userId'],
        'inboxId': value['inboxId'],
        'domainId': value['domainId'],
        'to': value['to'],
        'from': value['from'],
        'sender': (0, Sender_1.SenderToJSON)(value['sender']),
        'recipients': (0, EmailRecipients_1.EmailRecipientsToJSON)(value['recipients']),
        'replyTo': value['replyTo'],
        'cc': value['cc'],
        'bcc': value['bcc'],
        'attachments': value['attachments'],
        'subject': value['subject'],
        'bodyMD5Hash': value['bodyMD5Hash'],
        'body': value['body'],
        'toContacts': value['toContacts'],
        'toGroup': value['toGroup'],
        'charset': value['charset'],
        'isHTML': value['isHTML'],
        'sentAt': ((value['sentAt']).toISOString()),
        'createdAt': ((value['createdAt']).toISOString()),
        'pixelIds': value['pixelIds'],
        'messageId': value['messageId'],
        'messageIds': value['messageIds'],
        'virtualSend': value['virtualSend'],
        'templateId': value['templateId'],
        'templateVariables': value['templateVariables'],
        'headers': value['headers'],
        'threadId': value['threadId'],
        'bodyExcerpt': value['bodyExcerpt'],
        'textExcerpt': value['textExcerpt'],
        'inReplyTo': value['inReplyTo'],
        'favourite': value['favourite'],
        'html': value['html'],
    };
}
