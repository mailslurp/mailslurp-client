/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { EmailFeatureCategoryName } from './EmailFeatureCategoryName';
import type { EmailFeaturePlatformName } from './EmailFeaturePlatformName';
import type { EmailFeatureFamilyName } from './EmailFeatureFamilyName';
/**
 *
 * @export
 * @interface EmailFeatureNames
 */
export interface EmailFeatureNames {
    /**
     *
     * @type {Array<EmailFeatureFamilyName>}
     * @memberof EmailFeatureNames
     */
    family: Array<EmailFeatureFamilyName>;
    /**
     *
     * @type {Array<EmailFeaturePlatformName>}
     * @memberof EmailFeatureNames
     */
    platform: Array<EmailFeaturePlatformName>;
    /**
     *
     * @type {Array<EmailFeatureCategoryName>}
     * @memberof EmailFeatureNames
     */
    category: Array<EmailFeatureCategoryName>;
}
/**
 * Check if a given object implements the EmailFeatureNames interface.
 */
export declare function instanceOfEmailFeatureNames(value: object): value is EmailFeatureNames;
export declare function EmailFeatureNamesFromJSON(json: any): EmailFeatureNames;
export declare function EmailFeatureNamesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailFeatureNames;
export declare function EmailFeatureNamesToJSON(json: any): EmailFeatureNames;
export declare function EmailFeatureNamesToJSONTyped(value?: EmailFeatureNames | null, ignoreDiscriminator?: boolean): any;
