/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { EmailRecipientsProjection, SenderProjection } from './';
/**
 * An email thread is a message thread created for a email based on Message-ID, In-Reply-To, and References headers
 * @export
 * @interface EmailThreadProjection
 */
export interface EmailThreadProjection {
    /**
     * Thread topic subject
     * @type {string}
     * @memberof EmailThreadProjection
     */
    subject?: string;
    /**
     * Created at DateTime
     * @type {Date}
     * @memberof EmailThreadProjection
     */
    createdAt: Date;
    /**
     * Updated at DateTime
     * @type {Date}
     * @memberof EmailThreadProjection
     */
    updatedAt: Date;
    /**
     *
     * @type {SenderProjection}
     * @memberof EmailThreadProjection
     */
    sender?: SenderProjection;
    /**
     *
     * @type {EmailRecipientsProjection}
     * @memberof EmailThreadProjection
     */
    recipients?: EmailRecipientsProjection;
    /**
     * User ID
     * @type {string}
     * @memberof EmailThreadProjection
     */
    userId: string;
    /**
     * Inbox ID
     * @type {string}
     * @memberof EmailThreadProjection
     */
    inboxId?: string;
    /**
     * To recipients
     * @type {Array<string>}
     * @memberof EmailThreadProjection
     */
    to: Array<string>;
    /**
     * CC recipients
     * @type {Array<string>}
     * @memberof EmailThreadProjection
     */
    cc?: Array<string>;
    /**
     * BCC recipients
     * @type {Array<string>}
     * @memberof EmailThreadProjection
     */
    bcc?: Array<string>;
    /**
     * Has attachments
     * @type {boolean}
     * @memberof EmailThreadProjection
     */
    hasAttachments: boolean;
    /**
     * Has unread
     * @type {boolean}
     * @memberof EmailThreadProjection
     */
    unread: boolean;
    /**
     * Number of messages in the thread
     * @type {number}
     * @memberof EmailThreadProjection
     */
    messageCount: number;
    /**
     * Last body excerpt
     * @type {string}
     * @memberof EmailThreadProjection
     */
    lastBodyExcerpt?: string;
    /**
     * Last text excerpt
     * @type {string}
     * @memberof EmailThreadProjection
     */
    lastTextExcerpt?: string;
    /**
     * Last email created time
     * @type {Date}
     * @memberof EmailThreadProjection
     */
    lastCreatedAt?: Date;
    /**
     * Last sender
     * @type {string}
     * @memberof EmailThreadProjection
     */
    lastFrom?: string;
    /**
     *
     * @type {SenderProjection}
     * @memberof EmailThreadProjection
     */
    lastSender?: SenderProjection;
    /**
     * ID of email thread
     * @type {string}
     * @memberof EmailThreadProjection
     */
    id: string;
    /**
     * From sender
     * @type {string}
     * @memberof EmailThreadProjection
     */
    from?: string;
}
export declare function EmailThreadProjectionFromJSON(json: any): EmailThreadProjection;
export declare function EmailThreadProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailThreadProjection;
export declare function EmailThreadProjectionToJSON(value?: EmailThreadProjection | null): any;
