"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreateConnectorWithOptions = instanceOfCreateConnectorWithOptions;
exports.CreateConnectorWithOptionsFromJSON = CreateConnectorWithOptionsFromJSON;
exports.CreateConnectorWithOptionsFromJSONTyped = CreateConnectorWithOptionsFromJSONTyped;
exports.CreateConnectorWithOptionsToJSON = CreateConnectorWithOptionsToJSON;
exports.CreateConnectorWithOptionsToJSONTyped = CreateConnectorWithOptionsToJSONTyped;
var CreateConnectorOptions_1 = require("./CreateConnectorOptions");
var CreateConnectorSyncSettingsOptions_1 = require("./CreateConnectorSyncSettingsOptions");
var CreateConnectorImapConnectionOptions_1 = require("./CreateConnectorImapConnectionOptions");
var CreateConnectorSmtpConnectionOptions_1 = require("./CreateConnectorSmtpConnectionOptions");
/**
 * Check if a given object implements the CreateConnectorWithOptions interface.
 */
function instanceOfCreateConnectorWithOptions(value) {
    if (!('createConnectorOptions' in value) || value['createConnectorOptions'] === undefined)
        return false;
    return true;
}
function CreateConnectorWithOptionsFromJSON(json) {
    return CreateConnectorWithOptionsFromJSONTyped(json, false);
}
function CreateConnectorWithOptionsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createConnectorOptions': (0, CreateConnectorOptions_1.CreateConnectorOptionsFromJSON)(json['createConnectorOptions']),
        'createConnectorImapConnectionOptions': json['createConnectorImapConnectionOptions'] == null ? undefined : (0, CreateConnectorImapConnectionOptions_1.CreateConnectorImapConnectionOptionsFromJSON)(json['createConnectorImapConnectionOptions']),
        'createConnectorSmtpConnectionOptions': json['createConnectorSmtpConnectionOptions'] == null ? undefined : (0, CreateConnectorSmtpConnectionOptions_1.CreateConnectorSmtpConnectionOptionsFromJSON)(json['createConnectorSmtpConnectionOptions']),
        'createConnectorSyncSettingsOptions': json['createConnectorSyncSettingsOptions'] == null ? undefined : (0, CreateConnectorSyncSettingsOptions_1.CreateConnectorSyncSettingsOptionsFromJSON)(json['createConnectorSyncSettingsOptions']),
    };
}
function CreateConnectorWithOptionsToJSON(json) {
    return CreateConnectorWithOptionsToJSONTyped(json, false);
}
function CreateConnectorWithOptionsToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'createConnectorOptions': (0, CreateConnectorOptions_1.CreateConnectorOptionsToJSON)(value['createConnectorOptions']),
        'createConnectorImapConnectionOptions': (0, CreateConnectorImapConnectionOptions_1.CreateConnectorImapConnectionOptionsToJSON)(value['createConnectorImapConnectionOptions']),
        'createConnectorSmtpConnectionOptions': (0, CreateConnectorSmtpConnectionOptions_1.CreateConnectorSmtpConnectionOptionsToJSON)(value['createConnectorSmtpConnectionOptions']),
        'createConnectorSyncSettingsOptions': (0, CreateConnectorSyncSettingsOptions_1.CreateConnectorSyncSettingsOptionsToJSON)(value['createConnectorSyncSettingsOptions']),
    };
}
