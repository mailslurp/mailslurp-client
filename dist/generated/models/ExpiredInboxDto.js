"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfExpiredInboxDto = instanceOfExpiredInboxDto;
exports.ExpiredInboxDtoFromJSON = ExpiredInboxDtoFromJSON;
exports.ExpiredInboxDtoFromJSONTyped = ExpiredInboxDtoFromJSONTyped;
exports.ExpiredInboxDtoToJSON = ExpiredInboxDtoToJSON;
exports.ExpiredInboxDtoToJSONTyped = ExpiredInboxDtoToJSONTyped;
/**
 * Check if a given object implements the ExpiredInboxDto interface.
 */
function instanceOfExpiredInboxDto(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('inboxId' in value) || value['inboxId'] === undefined)
        return false;
    if (!('emailAddress' in value) || value['emailAddress'] === undefined)
        return false;
    return true;
}
function ExpiredInboxDtoFromJSON(json) {
    return ExpiredInboxDtoFromJSONTyped(json, false);
}
function ExpiredInboxDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'inboxId': json['inboxId'],
        'emailAddress': json['emailAddress'],
    };
}
function ExpiredInboxDtoToJSON(json) {
    return ExpiredInboxDtoToJSONTyped(json, false);
}
function ExpiredInboxDtoToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'inboxId': value['inboxId'],
        'emailAddress': value['emailAddress'],
    };
}
