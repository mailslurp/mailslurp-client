/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * ConnectorEventProjection
 * @export
 * @interface ConnectorEventProjection
 */
export interface ConnectorEventProjection {
    /**
     *
     * @type {Date}
     * @memberof ConnectorEventProjection
     */
    createdAt: Date;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventProjection
     */
    eventType: ConnectorEventProjectionEventTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventProjection
     */
    connectorId: string;
    /**
     *
     * @type {boolean}
     * @memberof ConnectorEventProjection
     */
    seen?: boolean;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventProjection
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventProjection
     */
    id?: string;
    /**
     *
     * @type {number}
     * @memberof ConnectorEventProjection
     */
    size: number;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventProjection
     */
    status: ConnectorEventProjectionStatusEnum;
}
/**
 * @export
 */
export declare const ConnectorEventProjectionEventTypeEnum: {
    readonly SEND: "SEND";
    readonly SYNC: "SYNC";
};
export type ConnectorEventProjectionEventTypeEnum = typeof ConnectorEventProjectionEventTypeEnum[keyof typeof ConnectorEventProjectionEventTypeEnum];
/**
 * @export
 */
export declare const ConnectorEventProjectionStatusEnum: {
    readonly SUCCESS: "SUCCESS";
    readonly INTERNAL_ERROR: "INTERNAL_ERROR";
    readonly SUBSCRIPTION_ERROR: "SUBSCRIPTION_ERROR";
    readonly CONNECTION_ERROR: "CONNECTION_ERROR";
    readonly NOT_FOUND: "NOT_FOUND";
};
export type ConnectorEventProjectionStatusEnum = typeof ConnectorEventProjectionStatusEnum[keyof typeof ConnectorEventProjectionStatusEnum];
/**
 * Check if a given object implements the ConnectorEventProjection interface.
 */
export declare function instanceOfConnectorEventProjection(value: object): value is ConnectorEventProjection;
export declare function ConnectorEventProjectionFromJSON(json: any): ConnectorEventProjection;
export declare function ConnectorEventProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectorEventProjection;
export declare function ConnectorEventProjectionToJSON(json: any): ConnectorEventProjection;
export declare function ConnectorEventProjectionToJSONTyped(value?: ConnectorEventProjection | null, ignoreDiscriminator?: boolean): any;
