/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ConnectorEventDto
 */
export interface ConnectorEventDto {
    /**
     *
     * @type {string}
     * @memberof ConnectorEventDto
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventDto
     */
    connectorId: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventDto
     */
    status: ConnectorEventDtoStatusEnum;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventDto
     */
    eventType: ConnectorEventDtoEventTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ConnectorEventDto
     */
    size: number;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventDto
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorEventDto
     */
    logs?: string;
    /**
     *
     * @type {boolean}
     * @memberof ConnectorEventDto
     */
    seen?: boolean;
    /**
     *
     * @type {Date}
     * @memberof ConnectorEventDto
     */
    createdAt: Date;
}
/**
 * @export
 */
export declare const ConnectorEventDtoStatusEnum: {
    readonly SUCCESS: "SUCCESS";
    readonly INTERNAL_ERROR: "INTERNAL_ERROR";
    readonly SUBSCRIPTION_ERROR: "SUBSCRIPTION_ERROR";
    readonly CONNECTION_ERROR: "CONNECTION_ERROR";
    readonly NOT_FOUND: "NOT_FOUND";
};
export type ConnectorEventDtoStatusEnum = typeof ConnectorEventDtoStatusEnum[keyof typeof ConnectorEventDtoStatusEnum];
/**
 * @export
 */
export declare const ConnectorEventDtoEventTypeEnum: {
    readonly SEND: "SEND";
    readonly SYNC: "SYNC";
};
export type ConnectorEventDtoEventTypeEnum = typeof ConnectorEventDtoEventTypeEnum[keyof typeof ConnectorEventDtoEventTypeEnum];
/**
 * Check if a given object implements the ConnectorEventDto interface.
 */
export declare function instanceOfConnectorEventDto(value: object): value is ConnectorEventDto;
export declare function ConnectorEventDtoFromJSON(json: any): ConnectorEventDto;
export declare function ConnectorEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectorEventDto;
export declare function ConnectorEventDtoToJSON(json: any): ConnectorEventDto;
export declare function ConnectorEventDtoToJSONTyped(value?: ConnectorEventDto | null, ignoreDiscriminator?: boolean): any;
