"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfEmailFeatureNames = instanceOfEmailFeatureNames;
exports.EmailFeatureNamesFromJSON = EmailFeatureNamesFromJSON;
exports.EmailFeatureNamesFromJSONTyped = EmailFeatureNamesFromJSONTyped;
exports.EmailFeatureNamesToJSON = EmailFeatureNamesToJSON;
exports.EmailFeatureNamesToJSONTyped = EmailFeatureNamesToJSONTyped;
var EmailFeatureCategoryName_1 = require("./EmailFeatureCategoryName");
var EmailFeaturePlatformName_1 = require("./EmailFeaturePlatformName");
var EmailFeatureFamilyName_1 = require("./EmailFeatureFamilyName");
/**
 * Check if a given object implements the EmailFeatureNames interface.
 */
function instanceOfEmailFeatureNames(value) {
    if (!('family' in value) || value['family'] === undefined)
        return false;
    if (!('platform' in value) || value['platform'] === undefined)
        return false;
    if (!('category' in value) || value['category'] === undefined)
        return false;
    return true;
}
function EmailFeatureNamesFromJSON(json) {
    return EmailFeatureNamesFromJSONTyped(json, false);
}
function EmailFeatureNamesFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'family': (json['family'].map(EmailFeatureFamilyName_1.EmailFeatureFamilyNameFromJSON)),
        'platform': (json['platform'].map(EmailFeaturePlatformName_1.EmailFeaturePlatformNameFromJSON)),
        'category': (json['category'].map(EmailFeatureCategoryName_1.EmailFeatureCategoryNameFromJSON)),
    };
}
function EmailFeatureNamesToJSON(json) {
    return EmailFeatureNamesToJSONTyped(json, false);
}
function EmailFeatureNamesToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'family': (value['family'].map(EmailFeatureFamilyName_1.EmailFeatureFamilyNameToJSON)),
        'platform': (value['platform'].map(EmailFeaturePlatformName_1.EmailFeaturePlatformNameToJSON)),
        'category': (value['category'].map(EmailFeatureCategoryName_1.EmailFeatureCategoryNameToJSON)),
    };
}
