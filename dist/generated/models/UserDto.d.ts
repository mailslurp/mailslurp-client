/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Representation a user's account
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    apiKey: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    emailAddress: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    emailAddressMd5: string;
    /**
     *
     * @type {Date}
     * @memberof UserDto
     */
    created?: Date;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    userType?: UserDtoUserTypeEnum;
    /**
     * Does user belong to an organization
     * @type {string}
     * @memberof UserDto
     */
    organization?: string;
    /**
     * Has user accepted an organization invite
     * @type {string}
     * @memberof UserDto
     */
    verified?: UserDtoVerifiedEnum;
    /**
     *
     * @type {boolean}
     * @memberof UserDto
     */
    hasPassword: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDto
     */
    isFrozen: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDto
     */
    addNewContacts?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    ssoProvider?: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    customerId?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDto
     */
    hasOnboarded?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    imapUsername?: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    imapPassword?: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    smtpUsername?: string;
    /**
     *
     * @type {string}
     * @memberof UserDto
     */
    smtpPassword?: string;
}
/**
 * @export
 * @enum {string}
 */
export declare enum UserDtoUserTypeEnum {
    SOLO = "SOLO",
    CHILD_SOLO = "CHILD_SOLO",
    CHILD_TEAM = "CHILD_TEAM"
}
/**
 * @export
 * @enum {string}
 */
export declare enum UserDtoVerifiedEnum {
    VERIFIED = "VERIFIED",
    PENDING = "PENDING"
}
export declare function UserDtoFromJSON(json: any): UserDto;
export declare function UserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto;
export declare function UserDtoToJSON(value?: UserDto | null): any;
