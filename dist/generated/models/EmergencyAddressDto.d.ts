/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface EmergencyAddressDto
 */
export interface EmergencyAddressDto {
    /**
     *
     * @type {string}
     * @memberof EmergencyAddressDto
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof EmergencyAddressDto
     */
    address1: string;
    /**
     *
     * @type {string}
     * @memberof EmergencyAddressDto
     */
    phoneCountry: EmergencyAddressDtoPhoneCountryEnum;
}
/**
 * @export
 */
export declare const EmergencyAddressDtoPhoneCountryEnum: {
    readonly US: "US";
    readonly GB: "GB";
    readonly AU: "AU";
};
export type EmergencyAddressDtoPhoneCountryEnum = typeof EmergencyAddressDtoPhoneCountryEnum[keyof typeof EmergencyAddressDtoPhoneCountryEnum];
/**
 * Check if a given object implements the EmergencyAddressDto interface.
 */
export declare function instanceOfEmergencyAddressDto(value: object): value is EmergencyAddressDto;
export declare function EmergencyAddressDtoFromJSON(json: any): EmergencyAddressDto;
export declare function EmergencyAddressDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmergencyAddressDto;
export declare function EmergencyAddressDtoToJSON(json: any): EmergencyAddressDto;
export declare function EmergencyAddressDtoToJSONTyped(value?: EmergencyAddressDto | null, ignoreDiscriminator?: boolean): any;
