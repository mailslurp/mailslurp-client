"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfConnectorSyncRequestResult = instanceOfConnectorSyncRequestResult;
exports.ConnectorSyncRequestResultFromJSON = ConnectorSyncRequestResultFromJSON;
exports.ConnectorSyncRequestResultFromJSONTyped = ConnectorSyncRequestResultFromJSONTyped;
exports.ConnectorSyncRequestResultToJSON = ConnectorSyncRequestResultToJSON;
exports.ConnectorSyncRequestResultToJSONTyped = ConnectorSyncRequestResultToJSONTyped;
var ConnectorSyncResult_1 = require("./ConnectorSyncResult");
/**
 * Check if a given object implements the ConnectorSyncRequestResult interface.
 */
function instanceOfConnectorSyncRequestResult(value) {
    return true;
}
function ConnectorSyncRequestResultFromJSON(json) {
    return ConnectorSyncRequestResultFromJSONTyped(json, false);
}
function ConnectorSyncRequestResultFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'syncResult': json['syncResult'] == null ? undefined : (0, ConnectorSyncResult_1.ConnectorSyncResultFromJSON)(json['syncResult']),
        'exception': json['exception'] == null ? undefined : json['exception'],
        'eventId': json['eventId'] == null ? undefined : json['eventId'],
    };
}
function ConnectorSyncRequestResultToJSON(json) {
    return ConnectorSyncRequestResultToJSONTyped(json, false);
}
function ConnectorSyncRequestResultToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'syncResult': (0, ConnectorSyncResult_1.ConnectorSyncResultToJSON)(value['syncResult']),
        'exception': value['exception'],
        'eventId': value['eventId'],
    };
}
