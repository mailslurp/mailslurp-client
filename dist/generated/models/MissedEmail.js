"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MissedEmailToJSON = exports.MissedEmailFromJSONTyped = exports.MissedEmailFromJSON = void 0;
var runtime_1 = require("../runtime");
function MissedEmailFromJSON(json) {
    return MissedEmailFromJSONTyped(json, false);
}
exports.MissedEmailFromJSON = MissedEmailFromJSON;
function MissedEmailFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        attachmentCount: json['attachmentCount'],
        bcc: json['bcc'],
        bodyExcerpt: !(0, runtime_1.exists)(json, 'bodyExcerpt') ? undefined : json['bodyExcerpt'],
        cc: json['cc'],
        createdAt: new Date(json['createdAt']),
        from: !(0, runtime_1.exists)(json, 'from') ? undefined : json['from'],
        id: !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        inboxIds: json['inboxIds'],
        subject: !(0, runtime_1.exists)(json, 'subject') ? undefined : json['subject'],
        to: json['to'],
        updatedAt: new Date(json['updatedAt']),
        userId: !(0, runtime_1.exists)(json, 'userId') ? undefined : json['userId'],
    };
}
exports.MissedEmailFromJSONTyped = MissedEmailFromJSONTyped;
function MissedEmailToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        attachmentCount: value.attachmentCount,
        bcc: value.bcc,
        bodyExcerpt: value.bodyExcerpt,
        cc: value.cc,
        createdAt: value.createdAt.toISOString(),
        from: value.from,
        id: value.id,
        inboxIds: value.inboxIds,
        subject: value.subject,
        to: value.to,
        updatedAt: value.updatedAt.toISOString(),
        userId: value.userId,
    };
}
exports.MissedEmailToJSON = MissedEmailToJSON;
