"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailThreadItemProjectionItemTypeEnum = void 0;
exports.instanceOfEmailThreadItemProjection = instanceOfEmailThreadItemProjection;
exports.EmailThreadItemProjectionFromJSON = EmailThreadItemProjectionFromJSON;
exports.EmailThreadItemProjectionFromJSONTyped = EmailThreadItemProjectionFromJSONTyped;
exports.EmailThreadItemProjectionToJSON = EmailThreadItemProjectionToJSON;
exports.EmailThreadItemProjectionToJSONTyped = EmailThreadItemProjectionToJSONTyped;
var EmailRecipientsProjection_1 = require("./EmailRecipientsProjection");
var SenderProjection_1 = require("./SenderProjection");
/**
 * @export
 */
exports.EmailThreadItemProjectionItemTypeEnum = {
    RECEIVED_EMAIL: 'RECEIVED_EMAIL',
    SENT_EMAIL: 'SENT_EMAIL'
};
/**
 * Check if a given object implements the EmailThreadItemProjection interface.
 */
function instanceOfEmailThreadItemProjection(value) {
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('to' in value) || value['to'] === undefined)
        return false;
    if (!('itemType' in value) || value['itemType'] === undefined)
        return false;
    if (!('read' in value) || value['read'] === undefined)
        return false;
    if (!('entityId' in value) || value['entityId'] === undefined)
        return false;
    return true;
}
function EmailThreadItemProjectionFromJSON(json) {
    return EmailThreadItemProjectionFromJSONTyped(json, false);
}
function EmailThreadItemProjectionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'subject': json['subject'] == null ? undefined : json['subject'],
        'createdAt': (new Date(json['createdAt'])),
        'sender': json['sender'] == null ? undefined : (0, SenderProjection_1.SenderProjectionFromJSON)(json['sender']),
        'recipients': json['recipients'] == null ? undefined : (0, EmailRecipientsProjection_1.EmailRecipientsProjectionFromJSON)(json['recipients']),
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'to': json['to'],
        'cc': json['cc'] == null ? undefined : json['cc'],
        'bcc': json['bcc'] == null ? undefined : json['bcc'],
        'messageId': json['messageId'] == null ? undefined : json['messageId'],
        'itemType': json['itemType'],
        'inReplyTo': json['inReplyTo'] == null ? undefined : json['inReplyTo'],
        'read': json['read'],
        'bodyExcerpt': json['bodyExcerpt'] == null ? undefined : json['bodyExcerpt'],
        'textExcerpt': json['textExcerpt'] == null ? undefined : json['textExcerpt'],
        'entityId': json['entityId'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
        'from': json['from'] == null ? undefined : json['from'],
    };
}
function EmailThreadItemProjectionToJSON(json) {
    return EmailThreadItemProjectionToJSONTyped(json, false);
}
function EmailThreadItemProjectionToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'subject': value['subject'],
        'createdAt': ((value['createdAt']).toISOString()),
        'sender': (0, SenderProjection_1.SenderProjectionToJSON)(value['sender']),
        'recipients': (0, EmailRecipientsProjection_1.EmailRecipientsProjectionToJSON)(value['recipients']),
        'attachments': value['attachments'],
        'to': value['to'],
        'cc': value['cc'],
        'bcc': value['bcc'],
        'messageId': value['messageId'],
        'itemType': value['itemType'],
        'inReplyTo': value['inReplyTo'],
        'read': value['read'],
        'bodyExcerpt': value['bodyExcerpt'],
        'textExcerpt': value['textExcerpt'],
        'entityId': value['entityId'],
        'threadId': value['threadId'],
        'from': value['from'],
    };
}
