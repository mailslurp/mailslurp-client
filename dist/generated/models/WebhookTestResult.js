"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfWebhookTestResult = instanceOfWebhookTestResult;
exports.WebhookTestResultFromJSON = WebhookTestResultFromJSON;
exports.WebhookTestResultFromJSONTyped = WebhookTestResultFromJSONTyped;
exports.WebhookTestResultToJSON = WebhookTestResultToJSON;
exports.WebhookTestResultToJSONTyped = WebhookTestResultToJSONTyped;
var WebhookTestRequest_1 = require("./WebhookTestRequest");
var WebhookTestResponse_1 = require("./WebhookTestResponse");
/**
 * Check if a given object implements the WebhookTestResult interface.
 */
function instanceOfWebhookTestResult(value) {
    if (!('response' in value) || value['response'] === undefined)
        return false;
    if (!('request' in value) || value['request'] === undefined)
        return false;
    return true;
}
function WebhookTestResultFromJSON(json) {
    return WebhookTestResultFromJSONTyped(json, false);
}
function WebhookTestResultFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'message': json['message'] == null ? undefined : json['message'],
        'response': (0, WebhookTestResponse_1.WebhookTestResponseFromJSON)(json['response']),
        'request': (0, WebhookTestRequest_1.WebhookTestRequestFromJSON)(json['request']),
    };
}
function WebhookTestResultToJSON(json) {
    return WebhookTestResultToJSONTyped(json, false);
}
function WebhookTestResultToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'message': value['message'],
        'response': (0, WebhookTestResponse_1.WebhookTestResponseToJSON)(value['response']),
        'request': (0, WebhookTestRequest_1.WebhookTestRequestToJSON)(value['request']),
    };
}
