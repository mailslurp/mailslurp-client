/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Representation of a webhook
 * @export
 * @interface WebhookProjection
 */
export interface WebhookProjection {
    /**
     *
     * @type {Date}
     * @memberof WebhookProjection
     */
    createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof WebhookProjection
     */
    updatedAt: Date;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    url: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    inboxId?: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    userId: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    eventName?: WebhookProjectionEventNameEnum;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    healthStatus?: WebhookProjectionHealthStatusEnum;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    phoneNumberId?: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    username?: string;
    /**
     *
     * @type {string}
     * @memberof WebhookProjection
     */
    password?: string;
}
/**
 * @export
 */
export declare const WebhookProjectionEventNameEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type WebhookProjectionEventNameEnum = typeof WebhookProjectionEventNameEnum[keyof typeof WebhookProjectionEventNameEnum];
/**
 * @export
 */
export declare const WebhookProjectionHealthStatusEnum: {
    readonly HEALTHY: "HEALTHY";
    readonly UNHEALTHY: "UNHEALTHY";
};
export type WebhookProjectionHealthStatusEnum = typeof WebhookProjectionHealthStatusEnum[keyof typeof WebhookProjectionHealthStatusEnum];
/**
 * Check if a given object implements the WebhookProjection interface.
 */
export declare function instanceOfWebhookProjection(value: object): value is WebhookProjection;
export declare function WebhookProjectionFromJSON(json: any): WebhookProjection;
export declare function WebhookProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookProjection;
export declare function WebhookProjectionToJSON(json: any): WebhookProjection;
export declare function WebhookProjectionToJSONTyped(value?: WebhookProjection | null, ignoreDiscriminator?: boolean): any;
