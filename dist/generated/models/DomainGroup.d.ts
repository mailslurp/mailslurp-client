/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DomainInformation } from './DomainInformation';
/**
 *
 * @export
 * @interface DomainGroup
 */
export interface DomainGroup {
    /**
     *
     * @type {string}
     * @memberof DomainGroup
     */
    label: DomainGroupLabelEnum;
    /**
     *
     * @type {Array<DomainInformation>}
     * @memberof DomainGroup
     */
    domains: Array<DomainInformation>;
}
/**
 * @export
 */
export declare const DomainGroupLabelEnum: {
    readonly DEFAULT: "DEFAULT";
    readonly DOMAIN_POOL: "DOMAIN_POOL";
    readonly CUSTOM: "CUSTOM";
};
export type DomainGroupLabelEnum = typeof DomainGroupLabelEnum[keyof typeof DomainGroupLabelEnum];
/**
 * Check if a given object implements the DomainGroup interface.
 */
export declare function instanceOfDomainGroup(value: object): value is DomainGroup;
export declare function DomainGroupFromJSON(json: any): DomainGroup;
export declare function DomainGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainGroup;
export declare function DomainGroupToJSON(json: any): DomainGroup;
export declare function DomainGroupToJSONTyped(value?: DomainGroup | null, ignoreDiscriminator?: boolean): any;
