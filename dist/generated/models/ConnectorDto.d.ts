/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ConnectorDto
 */
export interface ConnectorDto {
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    userId: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    connectorType: ConnectorDtoConnectorTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    connectorAuthType: ConnectorDtoConnectorAuthTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof ConnectorDto
     */
    syncEnabled: boolean;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    syncScheduleType: ConnectorDtoSyncScheduleTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ConnectorDto
     */
    syncInterval?: number;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    imapHost?: string;
    /**
     *
     * @type {number}
     * @memberof ConnectorDto
     */
    imapPort?: number;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    imapUsername?: string;
    /**
     *
     * @type {string}
     * @memberof ConnectorDto
     */
    imapPassword?: string;
    /**
     *
     * @type {boolean}
     * @memberof ConnectorDto
     */
    imapSsl?: boolean;
    /**
     *
     * @type {Date}
     * @memberof ConnectorDto
     */
    createdAt: Date;
}
/**
 * @export
 * @enum {string}
 */
export declare enum ConnectorDtoConnectorTypeEnum {
    IMAP = "IMAP"
}
/**
 * @export
 * @enum {string}
 */
export declare enum ConnectorDtoConnectorAuthTypeEnum {
    PLAIN_TEXT = "PLAIN_TEXT"
}
/**
 * @export
 * @enum {string}
 */
export declare enum ConnectorDtoSyncScheduleTypeEnum {
    INTERVAL = "INTERVAL"
}
export declare function ConnectorDtoFromJSON(json: any): ConnectorDto;
export declare function ConnectorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectorDto;
export declare function ConnectorDtoToJSON(value?: ConnectorDto | null): any;
