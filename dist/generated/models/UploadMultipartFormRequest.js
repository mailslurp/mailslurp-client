"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadMultipartFormRequestToJSONTyped = exports.UploadMultipartFormRequestToJSON = exports.UploadMultipartFormRequestFromJSONTyped = exports.UploadMultipartFormRequestFromJSON = exports.instanceOfUploadMultipartFormRequest = void 0;
/**
 * Check if a given object implements the UploadMultipartFormRequest interface.
 */
function instanceOfUploadMultipartFormRequest(value) {
    if (!('file' in value) || value['file'] === undefined)
        return false;
    return true;
}
exports.instanceOfUploadMultipartFormRequest = instanceOfUploadMultipartFormRequest;
function UploadMultipartFormRequestFromJSON(json) {
    return UploadMultipartFormRequestFromJSONTyped(json, false);
}
exports.UploadMultipartFormRequestFromJSON = UploadMultipartFormRequestFromJSON;
function UploadMultipartFormRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'file': json['file'],
    };
}
exports.UploadMultipartFormRequestFromJSONTyped = UploadMultipartFormRequestFromJSONTyped;
function UploadMultipartFormRequestToJSON(json) {
    return UploadMultipartFormRequestToJSONTyped(json, false);
}
exports.UploadMultipartFormRequestToJSON = UploadMultipartFormRequestToJSON;
function UploadMultipartFormRequestToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'file': value['file'],
    };
}
exports.UploadMultipartFormRequestToJSONTyped = UploadMultipartFormRequestToJSONTyped;
