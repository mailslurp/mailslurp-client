/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A thread is a message thread created for a message received by an alias
 * @export
 * @interface AliasThreadProjection
 */
export interface AliasThreadProjection {
    /**
     * Thread subject
     * @type {string}
     * @memberof AliasThreadProjection
     */
    subject?: string;
    /**
     * Created at DateTime
     * @type {Date}
     * @memberof AliasThreadProjection
     */
    createdAt: Date;
    /**
     * Updated at DateTime
     * @type {Date}
     * @memberof AliasThreadProjection
     */
    updatedAt: Date;
    /**
     * User ID
     * @type {string}
     * @memberof AliasThreadProjection
     */
    userId: string;
    /**
     * Inbox ID
     * @type {string}
     * @memberof AliasThreadProjection
     */
    inboxId: string;
    /**
     * To recipients
     * @type {Array<string>}
     * @memberof AliasThreadProjection
     */
    to: Array<string>;
    /**
     * CC recipients
     * @type {Array<string>}
     * @memberof AliasThreadProjection
     */
    cc?: Array<string>;
    /**
     * BCC recipients
     * @type {Array<string>}
     * @memberof AliasThreadProjection
     */
    bcc?: Array<string>;
    /**
     * Alias ID
     * @type {string}
     * @memberof AliasThreadProjection
     */
    aliasId: string;
    /**
     * Name of thread
     * @type {string}
     * @memberof AliasThreadProjection
     */
    name?: string;
    /**
     * ID of email thread
     * @type {string}
     * @memberof AliasThreadProjection
     */
    id: string;
}
export declare function AliasThreadProjectionFromJSON(json: any): AliasThreadProjection;
export declare function AliasThreadProjectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AliasThreadProjection;
export declare function AliasThreadProjectionToJSON(value?: AliasThreadProjection | null): any;
