/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Variable for use with email template
 * @export
 * @interface TemplateVariable
 */
export interface TemplateVariable {
    /**
     * Name of variable. This can be used in a template as {{name}}
     * @type {string}
     * @memberof TemplateVariable
     */
    name: string;
    /**
     * The type of variable
     * @type {string}
     * @memberof TemplateVariable
     */
    variableType: TemplateVariableVariableTypeEnum;
}
/**
 * @export
 */
export declare const TemplateVariableVariableTypeEnum: {
    readonly STRING: "STRING";
};
export type TemplateVariableVariableTypeEnum = typeof TemplateVariableVariableTypeEnum[keyof typeof TemplateVariableVariableTypeEnum];
/**
 * Check if a given object implements the TemplateVariable interface.
 */
export declare function instanceOfTemplateVariable(value: object): value is TemplateVariable;
export declare function TemplateVariableFromJSON(json: any): TemplateVariable;
export declare function TemplateVariableFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateVariable;
export declare function TemplateVariableToJSON(json: any): TemplateVariable;
export declare function TemplateVariableToJSONTyped(value?: TemplateVariable | null, ignoreDiscriminator?: boolean): any;
