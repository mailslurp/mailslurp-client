/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AbstractWebhookPayload, CountDto, CreateWebhookOptions, JSONSchemaDto, PageWebhookEndpointProjection, PageWebhookProjection, PageWebhookResult, UnseenErrorCountDto, VerifyWebhookSignatureOptions, VerifyWebhookSignatureResults, WebhookBouncePayload, WebhookBounceRecipientPayload, WebhookDeliveryStatusPayload, WebhookDto, WebhookEmailOpenedPayload, WebhookEmailReadPayload, WebhookHeaders, WebhookNewAttachmentPayload, WebhookNewContactPayload, WebhookNewEmailPayload, WebhookNewSmsPayload, WebhookProjection, WebhookRedriveAllResult, WebhookRedriveResult, WebhookResultDto, WebhookTestResult } from '../models/index';
export interface CreateAccountWebhookRequest {
    createWebhookOptions: CreateWebhookOptions;
}
export interface CreateWebhookRequest {
    inboxId: string;
    createWebhookOptions: CreateWebhookOptions;
}
export interface CreateWebhookForPhoneNumberRequest {
    phoneNumberId: string;
    createWebhookOptions: CreateWebhookOptions;
}
export interface DeleteAllWebhooksRequest {
    before?: Date;
}
export interface DeleteWebhookRequest {
    inboxId: string;
    webhookId: string;
}
export interface DeleteWebhookByIdRequest {
    webhookId: string;
}
export interface GetAllAccountWebhooksRequest {
    page?: number;
    size?: number;
    sort?: GetAllAccountWebhooksSortEnum;
    since?: Date;
    before?: Date;
    eventType?: GetAllAccountWebhooksEventTypeEnum;
    health?: GetAllAccountWebhooksHealthEnum;
    searchFilter?: string;
}
export interface GetAllWebhookEndpointsRequest {
    page?: number;
    size?: number;
    sort?: GetAllWebhookEndpointsSortEnum;
    searchFilter?: string;
    since?: Date;
    inboxId?: string;
    phoneId?: string;
    before?: Date;
    health?: GetAllWebhookEndpointsHealthEnum;
    eventType?: GetAllWebhookEndpointsEventTypeEnum;
}
export interface GetAllWebhookResultsRequest {
    page?: number;
    size?: number;
    sort?: GetAllWebhookResultsSortEnum;
    searchFilter?: string;
    since?: Date;
    before?: Date;
    unseenOnly?: boolean;
    resultType?: GetAllWebhookResultsResultTypeEnum;
    eventName?: GetAllWebhookResultsEventNameEnum;
    minStatusCode?: number;
    maxStatusCode?: number;
    inboxId?: string;
    smsId?: string;
    attachmentId?: string;
    emailId?: string;
    phoneId?: string;
}
export interface GetAllWebhooksRequest {
    page?: number;
    size?: number;
    sort?: GetAllWebhooksSortEnum;
    searchFilter?: string;
    since?: Date;
    inboxId?: string;
    phoneId?: string;
    before?: Date;
    health?: GetAllWebhooksHealthEnum;
    eventType?: GetAllWebhooksEventTypeEnum;
    url?: string;
}
export interface GetInboxWebhooksPaginatedRequest {
    inboxId: string;
    page?: number;
    size?: number;
    sort?: GetInboxWebhooksPaginatedSortEnum;
    searchFilter?: string;
    since?: Date;
    before?: Date;
    health?: GetInboxWebhooksPaginatedHealthEnum;
    eventType?: GetInboxWebhooksPaginatedEventTypeEnum;
}
export interface GetJsonSchemaForWebhookEventRequest {
    event: GetJsonSchemaForWebhookEventEventEnum;
}
export interface GetJsonSchemaForWebhookPayloadRequest {
    webhookId: string;
}
export interface GetPhoneNumberWebhooksPaginatedRequest {
    phoneId: string;
    page?: number;
    size?: number;
    sort?: GetPhoneNumberWebhooksPaginatedSortEnum;
    since?: Date;
    before?: Date;
    eventType?: GetPhoneNumberWebhooksPaginatedEventTypeEnum;
    searchFilter?: string;
    health?: GetPhoneNumberWebhooksPaginatedHealthEnum;
}
export interface GetTestWebhookPayloadRequest {
    eventName?: GetTestWebhookPayloadEventNameEnum;
}
export interface GetTestWebhookPayloadForWebhookRequest {
    webhookId: string;
}
export interface GetWebhookRequest {
    webhookId: string;
}
export interface GetWebhookResultRequest {
    webhookResultId: string;
}
export interface GetWebhookResultsRequest {
    webhookId: string;
    page?: number;
    size?: number;
    sort?: GetWebhookResultsSortEnum;
    searchFilter?: string;
    since?: Date;
    before?: Date;
    unseenOnly?: boolean;
    resultType?: GetWebhookResultsResultTypeEnum;
    eventName?: GetWebhookResultsEventNameEnum;
    minStatusCode?: number;
    maxStatusCode?: number;
    inboxId?: string;
    smsId?: string;
    attachmentId?: string;
    emailId?: string;
    phoneId?: string;
}
export interface GetWebhookResultsCountRequest {
    webhookId: string;
}
export interface GetWebhooksRequest {
    inboxId: string;
    page?: number;
    size?: number;
    sort?: GetWebhooksSortEnum;
}
export interface RedriveWebhookResultRequest {
    webhookResultId: string;
}
export interface SendTestDataRequest {
    webhookId: string;
}
export interface UpdateWebhookRequest {
    webhookId: string;
    createWebhookOptions: CreateWebhookOptions;
    inboxId?: string;
    phoneNumberId?: string;
}
export interface UpdateWebhookHeadersRequest {
    webhookId: string;
    webhookHeaders: WebhookHeaders;
}
export interface VerifyWebhookSignatureRequest {
    verifyWebhookSignatureOptions: VerifyWebhookSignatureOptions;
}
export interface WaitForWebhookResultsRequest {
    webhookId: string;
    expectedCount: number;
    timeout: number;
}
/**
 *
 */
export declare class WebhookControllerApi extends runtime.BaseAPI {
    /**
     * Get notified of account level events such as bounce and bounce recipient.
     * Attach a WebHook URL to an inbox
     */
    createAccountWebhookRaw(requestParameters: CreateAccountWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDto>>;
    /**
     * Get notified of account level events such as bounce and bounce recipient.
     * Attach a WebHook URL to an inbox
     */
    createAccountWebhook(requestParameters: CreateAccountWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDto>;
    /**
     * Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint.
     * Attach a WebHook URL to an inbox
     */
    createWebhookRaw(requestParameters: CreateWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDto>>;
    /**
     * Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint.
     * Attach a WebHook URL to an inbox
     */
    createWebhook(requestParameters: CreateWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDto>;
    /**
     * Get notified whenever a phone number receives an SMS via a WebHook URL.
     * Attach a WebHook URL to a phone number
     */
    createWebhookForPhoneNumberRaw(requestParameters: CreateWebhookForPhoneNumberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDto>>;
    /**
     * Get notified whenever a phone number receives an SMS via a WebHook URL.
     * Attach a WebHook URL to a phone number
     */
    createWebhookForPhoneNumber(requestParameters: CreateWebhookForPhoneNumberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDto>;
    /**
     * Delete all webhooks
     */
    deleteAllWebhooksRaw(requestParameters: DeleteAllWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete all webhooks
     */
    deleteAllWebhooks(requestParameters?: DeleteAllWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete and disable a Webhook for an Inbox
     */
    deleteWebhookRaw(requestParameters: DeleteWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete and disable a Webhook for an Inbox
     */
    deleteWebhook(requestParameters: DeleteWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Delete a webhook
     */
    deleteWebhookByIdRaw(requestParameters: DeleteWebhookByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete a webhook
     */
    deleteWebhookById(requestParameters: DeleteWebhookByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * List account webhooks in paginated form. Allows for page index, page size, and sort direction.
     * List account webhooks Paginated
     */
    getAllAccountWebhooksRaw(requestParameters: GetAllAccountWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookProjection>>;
    /**
     * List account webhooks in paginated form. Allows for page index, page size, and sort direction.
     * List account webhooks Paginated
     */
    getAllAccountWebhooks(requestParameters?: GetAllAccountWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookProjection>;
    /**
     * List webhooks URL in paginated form. Allows for page index, page size, and sort direction.
     * List Webhooks endpoints Paginated
     */
    getAllWebhookEndpointsRaw(requestParameters: GetAllWebhookEndpointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookEndpointProjection>>;
    /**
     * List webhooks URL in paginated form. Allows for page index, page size, and sort direction.
     * List Webhooks endpoints Paginated
     */
    getAllWebhookEndpoints(requestParameters?: GetAllWebhookEndpointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookEndpointProjection>;
    /**
     * Get results for all webhooks
     */
    getAllWebhookResultsRaw(requestParameters: GetAllWebhookResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookResult>>;
    /**
     * Get results for all webhooks
     */
    getAllWebhookResults(requestParameters?: GetAllWebhookResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookResult>;
    /**
     * List webhooks in paginated form. Allows for page index, page size, and sort direction.
     * List Webhooks Paginated
     */
    getAllWebhooksRaw(requestParameters: GetAllWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookProjection>>;
    /**
     * List webhooks in paginated form. Allows for page index, page size, and sort direction.
     * List Webhooks Paginated
     */
    getAllWebhooks(requestParameters?: GetAllWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookProjection>;
    /**
     * Get paginated webhooks for an Inbox
     */
    getInboxWebhooksPaginatedRaw(requestParameters: GetInboxWebhooksPaginatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookProjection>>;
    /**
     * Get paginated webhooks for an Inbox
     */
    getInboxWebhooksPaginated(requestParameters: GetInboxWebhooksPaginatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookProjection>;
    /**
     * Get JSON Schema definition for webhook payload by event
     */
    getJsonSchemaForWebhookEventRaw(requestParameters: GetJsonSchemaForWebhookEventRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JSONSchemaDto>>;
    /**
     * Get JSON Schema definition for webhook payload by event
     */
    getJsonSchemaForWebhookEvent(requestParameters: GetJsonSchemaForWebhookEventRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JSONSchemaDto>;
    /**
     * Get JSON Schema definition for webhook payload
     */
    getJsonSchemaForWebhookPayloadRaw(requestParameters: GetJsonSchemaForWebhookPayloadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JSONSchemaDto>>;
    /**
     * Get JSON Schema definition for webhook payload
     */
    getJsonSchemaForWebhookPayload(requestParameters: GetJsonSchemaForWebhookPayloadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JSONSchemaDto>;
    /**
     * Get paginated webhooks for a phone number
     */
    getPhoneNumberWebhooksPaginatedRaw(requestParameters: GetPhoneNumberWebhooksPaginatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookProjection>>;
    /**
     * Get paginated webhooks for a phone number
     */
    getPhoneNumberWebhooksPaginated(requestParameters: GetPhoneNumberWebhooksPaginatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookProjection>;
    /**
     * Get test webhook payload example. Response content depends on eventName passed. Uses `EMAIL_RECEIVED` as default.
     */
    getTestWebhookPayloadRaw(requestParameters: GetTestWebhookPayloadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AbstractWebhookPayload>>;
    /**
     * Get test webhook payload example. Response content depends on eventName passed. Uses `EMAIL_RECEIVED` as default.
     */
    getTestWebhookPayload(requestParameters?: GetTestWebhookPayloadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AbstractWebhookPayload>;
    /**
     * Get webhook test payload for bounce
     */
    getTestWebhookPayloadBounceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookBouncePayload>>;
    /**
     * Get webhook test payload for bounce
     */
    getTestWebhookPayloadBounce(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookBouncePayload>;
    /**
     * Get webhook test payload for bounce recipient
     */
    getTestWebhookPayloadBounceRecipientRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookBounceRecipientPayload>>;
    /**
     * Get webhook test payload for bounce recipient
     */
    getTestWebhookPayloadBounceRecipient(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookBounceRecipientPayload>;
    /**
     * Get webhook test payload for delivery status event
     */
    getTestWebhookPayloadDeliveryStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDeliveryStatusPayload>>;
    /**
     * Get webhook test payload for delivery status event
     */
    getTestWebhookPayloadDeliveryStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDeliveryStatusPayload>;
    /**
     * Get webhook test payload for email opened event
     */
    getTestWebhookPayloadEmailOpenedRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookEmailOpenedPayload>>;
    /**
     * Get webhook test payload for email opened event
     */
    getTestWebhookPayloadEmailOpened(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookEmailOpenedPayload>;
    /**
     * Get webhook test payload for email opened event
     */
    getTestWebhookPayloadEmailReadRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookEmailReadPayload>>;
    /**
     * Get webhook test payload for email opened event
     */
    getTestWebhookPayloadEmailRead(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookEmailReadPayload>;
    /**
     * Get example payload for webhook
     */
    getTestWebhookPayloadForWebhookRaw(requestParameters: GetTestWebhookPayloadForWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AbstractWebhookPayload>>;
    /**
     * Get example payload for webhook
     */
    getTestWebhookPayloadForWebhook(requestParameters: GetTestWebhookPayloadForWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AbstractWebhookPayload>;
    /**
     * Get webhook test payload for new attachment event
     */
    getTestWebhookPayloadNewAttachmentRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookNewAttachmentPayload>>;
    /**
     * Get webhook test payload for new attachment event
     */
    getTestWebhookPayloadNewAttachment(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookNewAttachmentPayload>;
    /**
     * Get webhook test payload for new contact event
     */
    getTestWebhookPayloadNewContactRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookNewContactPayload>>;
    /**
     * Get webhook test payload for new contact event
     */
    getTestWebhookPayloadNewContact(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookNewContactPayload>;
    /**
     * Get webhook test payload for new email event
     */
    getTestWebhookPayloadNewEmailRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookNewEmailPayload>>;
    /**
     * Get webhook test payload for new email event
     */
    getTestWebhookPayloadNewEmail(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookNewEmailPayload>;
    /**
     * Get webhook test payload for new sms event
     */
    getTestWebhookPayloadNewSmsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookNewSmsPayload>>;
    /**
     * Get webhook test payload for new sms event
     */
    getTestWebhookPayloadNewSms(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookNewSmsPayload>;
    /**
     * Get a webhook
     */
    getWebhookRaw(requestParameters: GetWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDto>>;
    /**
     * Get a webhook
     */
    getWebhook(requestParameters: GetWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDto>;
    /**
     * Get a webhook result for a webhook
     */
    getWebhookResultRaw(requestParameters: GetWebhookResultRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookResultDto>>;
    /**
     * Get a webhook result for a webhook
     */
    getWebhookResult(requestParameters: GetWebhookResultRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookResultDto>;
    /**
     * Get a webhook results for a webhook
     */
    getWebhookResultsRaw(requestParameters: GetWebhookResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageWebhookResult>>;
    /**
     * Get a webhook results for a webhook
     */
    getWebhookResults(requestParameters: GetWebhookResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageWebhookResult>;
    /**
     * Get a webhook results count for a webhook
     */
    getWebhookResultsCountRaw(requestParameters: GetWebhookResultsCountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CountDto>>;
    /**
     * Get a webhook results count for a webhook
     */
    getWebhookResultsCount(requestParameters: GetWebhookResultsCountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CountDto>;
    /**
     * Get count of unseen webhook results with error status
     */
    getWebhookResultsUnseenErrorCountRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnseenErrorCountDto>>;
    /**
     * Get count of unseen webhook results with error status
     */
    getWebhookResultsUnseenErrorCount(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnseenErrorCountDto>;
    /**
     * Get all webhooks for an Inbox
     * @deprecated
     */
    getWebhooksRaw(requestParameters: GetWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WebhookProjection>>>;
    /**
     * Get all webhooks for an Inbox
     * @deprecated
     */
    getWebhooks(requestParameters: GetWebhooksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WebhookProjection>>;
    /**
     * Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload.
     * Redrive all webhook results that have failed status
     */
    redriveAllWebhookResultsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookRedriveAllResult>>;
    /**
     * Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload.
     * Redrive all webhook results that have failed status
     */
    redriveAllWebhookResults(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookRedriveAllResult>;
    /**
     * Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method.
     * Get a webhook result and try to resend the original webhook payload
     */
    redriveWebhookResultRaw(requestParameters: RedriveWebhookResultRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookRedriveResult>>;
    /**
     * Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method.
     * Get a webhook result and try to resend the original webhook payload
     */
    redriveWebhookResult(requestParameters: RedriveWebhookResultRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookRedriveResult>;
    /**
     * Send webhook test data
     */
    sendTestDataRaw(requestParameters: SendTestDataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookTestResult>>;
    /**
     * Send webhook test data
     */
    sendTestData(requestParameters: SendTestDataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookTestResult>;
    /**
     * Update a webhook
     */
    updateWebhookRaw(requestParameters: UpdateWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDto>>;
    /**
     * Update a webhook
     */
    updateWebhook(requestParameters: UpdateWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDto>;
    /**
     * Update a webhook request headers
     */
    updateWebhookHeadersRaw(requestParameters: UpdateWebhookHeadersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookDto>>;
    /**
     * Update a webhook request headers
     */
    updateWebhookHeaders(requestParameters: UpdateWebhookHeadersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookDto>;
    /**
     * Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server.
     * Verify a webhook payload signature
     */
    verifyWebhookSignatureRaw(requestParameters: VerifyWebhookSignatureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VerifyWebhookSignatureResults>>;
    /**
     * Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server.
     * Verify a webhook payload signature
     */
    verifyWebhookSignature(requestParameters: VerifyWebhookSignatureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VerifyWebhookSignatureResults>;
    /**
     * Wait for webhook results for a webhook
     */
    waitForWebhookResultsRaw(requestParameters: WaitForWebhookResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WebhookResultDto>>>;
    /**
     * Wait for webhook results for a webhook
     */
    waitForWebhookResults(requestParameters: WaitForWebhookResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WebhookResultDto>>;
}
/**
 * @export
 */
export declare const GetAllAccountWebhooksSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetAllAccountWebhooksSortEnum = typeof GetAllAccountWebhooksSortEnum[keyof typeof GetAllAccountWebhooksSortEnum];
/**
 * @export
 */
export declare const GetAllAccountWebhooksEventTypeEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetAllAccountWebhooksEventTypeEnum = typeof GetAllAccountWebhooksEventTypeEnum[keyof typeof GetAllAccountWebhooksEventTypeEnum];
/**
 * @export
 */
export declare const GetAllAccountWebhooksHealthEnum: {
    readonly HEALTHY: "HEALTHY";
    readonly UNHEALTHY: "UNHEALTHY";
};
export type GetAllAccountWebhooksHealthEnum = typeof GetAllAccountWebhooksHealthEnum[keyof typeof GetAllAccountWebhooksHealthEnum];
/**
 * @export
 */
export declare const GetAllWebhookEndpointsSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetAllWebhookEndpointsSortEnum = typeof GetAllWebhookEndpointsSortEnum[keyof typeof GetAllWebhookEndpointsSortEnum];
/**
 * @export
 */
export declare const GetAllWebhookEndpointsHealthEnum: {
    readonly HEALTHY: "HEALTHY";
    readonly UNHEALTHY: "UNHEALTHY";
};
export type GetAllWebhookEndpointsHealthEnum = typeof GetAllWebhookEndpointsHealthEnum[keyof typeof GetAllWebhookEndpointsHealthEnum];
/**
 * @export
 */
export declare const GetAllWebhookEndpointsEventTypeEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetAllWebhookEndpointsEventTypeEnum = typeof GetAllWebhookEndpointsEventTypeEnum[keyof typeof GetAllWebhookEndpointsEventTypeEnum];
/**
 * @export
 */
export declare const GetAllWebhookResultsSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetAllWebhookResultsSortEnum = typeof GetAllWebhookResultsSortEnum[keyof typeof GetAllWebhookResultsSortEnum];
/**
 * @export
 */
export declare const GetAllWebhookResultsResultTypeEnum: {
    readonly BAD_RESPONSE: "BAD_RESPONSE";
    readonly EXCEPTION: "EXCEPTION";
    readonly SUCCESS: "SUCCESS";
    readonly REDRIVEN: "REDRIVEN";
};
export type GetAllWebhookResultsResultTypeEnum = typeof GetAllWebhookResultsResultTypeEnum[keyof typeof GetAllWebhookResultsResultTypeEnum];
/**
 * @export
 */
export declare const GetAllWebhookResultsEventNameEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetAllWebhookResultsEventNameEnum = typeof GetAllWebhookResultsEventNameEnum[keyof typeof GetAllWebhookResultsEventNameEnum];
/**
 * @export
 */
export declare const GetAllWebhooksSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetAllWebhooksSortEnum = typeof GetAllWebhooksSortEnum[keyof typeof GetAllWebhooksSortEnum];
/**
 * @export
 */
export declare const GetAllWebhooksHealthEnum: {
    readonly HEALTHY: "HEALTHY";
    readonly UNHEALTHY: "UNHEALTHY";
};
export type GetAllWebhooksHealthEnum = typeof GetAllWebhooksHealthEnum[keyof typeof GetAllWebhooksHealthEnum];
/**
 * @export
 */
export declare const GetAllWebhooksEventTypeEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetAllWebhooksEventTypeEnum = typeof GetAllWebhooksEventTypeEnum[keyof typeof GetAllWebhooksEventTypeEnum];
/**
 * @export
 */
export declare const GetInboxWebhooksPaginatedSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetInboxWebhooksPaginatedSortEnum = typeof GetInboxWebhooksPaginatedSortEnum[keyof typeof GetInboxWebhooksPaginatedSortEnum];
/**
 * @export
 */
export declare const GetInboxWebhooksPaginatedHealthEnum: {
    readonly HEALTHY: "HEALTHY";
    readonly UNHEALTHY: "UNHEALTHY";
};
export type GetInboxWebhooksPaginatedHealthEnum = typeof GetInboxWebhooksPaginatedHealthEnum[keyof typeof GetInboxWebhooksPaginatedHealthEnum];
/**
 * @export
 */
export declare const GetInboxWebhooksPaginatedEventTypeEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetInboxWebhooksPaginatedEventTypeEnum = typeof GetInboxWebhooksPaginatedEventTypeEnum[keyof typeof GetInboxWebhooksPaginatedEventTypeEnum];
/**
 * @export
 */
export declare const GetJsonSchemaForWebhookEventEventEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetJsonSchemaForWebhookEventEventEnum = typeof GetJsonSchemaForWebhookEventEventEnum[keyof typeof GetJsonSchemaForWebhookEventEventEnum];
/**
 * @export
 */
export declare const GetPhoneNumberWebhooksPaginatedSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetPhoneNumberWebhooksPaginatedSortEnum = typeof GetPhoneNumberWebhooksPaginatedSortEnum[keyof typeof GetPhoneNumberWebhooksPaginatedSortEnum];
/**
 * @export
 */
export declare const GetPhoneNumberWebhooksPaginatedEventTypeEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetPhoneNumberWebhooksPaginatedEventTypeEnum = typeof GetPhoneNumberWebhooksPaginatedEventTypeEnum[keyof typeof GetPhoneNumberWebhooksPaginatedEventTypeEnum];
/**
 * @export
 */
export declare const GetPhoneNumberWebhooksPaginatedHealthEnum: {
    readonly HEALTHY: "HEALTHY";
    readonly UNHEALTHY: "UNHEALTHY";
};
export type GetPhoneNumberWebhooksPaginatedHealthEnum = typeof GetPhoneNumberWebhooksPaginatedHealthEnum[keyof typeof GetPhoneNumberWebhooksPaginatedHealthEnum];
/**
 * @export
 */
export declare const GetTestWebhookPayloadEventNameEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetTestWebhookPayloadEventNameEnum = typeof GetTestWebhookPayloadEventNameEnum[keyof typeof GetTestWebhookPayloadEventNameEnum];
/**
 * @export
 */
export declare const GetWebhookResultsSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetWebhookResultsSortEnum = typeof GetWebhookResultsSortEnum[keyof typeof GetWebhookResultsSortEnum];
/**
 * @export
 */
export declare const GetWebhookResultsResultTypeEnum: {
    readonly BAD_RESPONSE: "BAD_RESPONSE";
    readonly EXCEPTION: "EXCEPTION";
    readonly SUCCESS: "SUCCESS";
    readonly REDRIVEN: "REDRIVEN";
};
export type GetWebhookResultsResultTypeEnum = typeof GetWebhookResultsResultTypeEnum[keyof typeof GetWebhookResultsResultTypeEnum];
/**
 * @export
 */
export declare const GetWebhookResultsEventNameEnum: {
    readonly EMAIL_RECEIVED: "EMAIL_RECEIVED";
    readonly NEW_EMAIL: "NEW_EMAIL";
    readonly NEW_CONTACT: "NEW_CONTACT";
    readonly NEW_ATTACHMENT: "NEW_ATTACHMENT";
    readonly EMAIL_OPENED: "EMAIL_OPENED";
    readonly EMAIL_READ: "EMAIL_READ";
    readonly DELIVERY_STATUS: "DELIVERY_STATUS";
    readonly BOUNCE: "BOUNCE";
    readonly BOUNCE_RECIPIENT: "BOUNCE_RECIPIENT";
    readonly NEW_SMS: "NEW_SMS";
    readonly NEW_GUEST_USER: "NEW_GUEST_USER";
};
export type GetWebhookResultsEventNameEnum = typeof GetWebhookResultsEventNameEnum[keyof typeof GetWebhookResultsEventNameEnum];
/**
 * @export
 */
export declare const GetWebhooksSortEnum: {
    readonly ASC: "ASC";
    readonly DESC: "DESC";
};
export type GetWebhooksSortEnum = typeof GetWebhooksSortEnum[keyof typeof GetWebhooksSortEnum];
