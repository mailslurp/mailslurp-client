/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CreateInboxReplierOptions, InboxReplierDto, PageInboxReplierDto, PageInboxReplierEvents, UpdateInboxReplierOptions } from '../models';
export interface CreateNewInboxReplierRequest {
    createInboxReplierOptions: CreateInboxReplierOptions;
}
export interface DeleteInboxReplierRequest {
    id: string;
}
export interface DeleteInboxRepliersRequest {
    inboxId?: string;
}
export interface GetInboxReplierRequest {
    id: string;
}
export interface GetInboxReplierEventsRequest {
    id: string;
    page?: number;
    size?: number;
    sort?: GetInboxReplierEventsSortEnum;
}
export interface GetInboxRepliersRequest {
    inboxId?: string;
    page?: number;
    size?: number;
    sort?: GetInboxRepliersSortEnum;
    since?: Date;
    before?: Date;
}
export interface UpdateInboxReplierRequest {
    id: string;
    updateInboxReplierOptions: UpdateInboxReplierOptions;
}
/**
 *
 */
export declare class InboxReplierControllerApi extends runtime.BaseAPI {
    /**
     * Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving
     * Create an inbox replier
     */
    createNewInboxReplierRaw(requestParameters: CreateNewInboxReplierRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InboxReplierDto>>;
    /**
     * Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving
     * Create an inbox replier
     */
    createNewInboxReplier(requestParameters: CreateNewInboxReplierRequest, initOverrides?: RequestInit): Promise<InboxReplierDto>;
    /**
     * Delete inbox replier
     * Delete an inbox replier
     */
    deleteInboxReplierRaw(requestParameters: DeleteInboxReplierRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete inbox replier
     * Delete an inbox replier
     */
    deleteInboxReplier(requestParameters: DeleteInboxReplierRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Delete inbox repliers. Accepts optional inboxId filter.
     * Delete inbox repliers
     */
    deleteInboxRepliersRaw(requestParameters: DeleteInboxRepliersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete inbox repliers. Accepts optional inboxId filter.
     * Delete inbox repliers
     */
    deleteInboxRepliers(requestParameters: DeleteInboxRepliersRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Get inbox ruleset
     * Get an inbox replier
     */
    getInboxReplierRaw(requestParameters: GetInboxReplierRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InboxReplierDto>>;
    /**
     * Get inbox ruleset
     * Get an inbox replier
     */
    getInboxReplier(requestParameters: GetInboxReplierRequest, initOverrides?: RequestInit): Promise<InboxReplierDto>;
    /**
     * Get inbox ruleset events
     * Get an inbox replier event list
     */
    getInboxReplierEventsRaw(requestParameters: GetInboxReplierEventsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PageInboxReplierEvents>>;
    /**
     * Get inbox ruleset events
     * Get an inbox replier event list
     */
    getInboxReplierEvents(requestParameters: GetInboxReplierEventsRequest, initOverrides?: RequestInit): Promise<PageInboxReplierEvents>;
    /**
     * List all repliers attached to an inbox
     * List inbox repliers
     */
    getInboxRepliersRaw(requestParameters: GetInboxRepliersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PageInboxReplierDto>>;
    /**
     * List all repliers attached to an inbox
     * List inbox repliers
     */
    getInboxRepliers(requestParameters: GetInboxRepliersRequest, initOverrides?: RequestInit): Promise<PageInboxReplierDto>;
    /**
     * Update inbox ruleset
     * Update an inbox replier
     */
    updateInboxReplierRaw(requestParameters: UpdateInboxReplierRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InboxReplierDto>>;
    /**
     * Update inbox ruleset
     * Update an inbox replier
     */
    updateInboxReplier(requestParameters: UpdateInboxReplierRequest, initOverrides?: RequestInit): Promise<InboxReplierDto>;
}
/**
 * @export
 * @enum {string}
 */
export declare enum GetInboxReplierEventsSortEnum {
    ASC = "ASC",
    DESC = "DESC"
}
/**
 * @export
 * @enum {string}
 */
export declare enum GetInboxRepliersSortEnum {
    ASC = "ASC",
    DESC = "DESC"
}
