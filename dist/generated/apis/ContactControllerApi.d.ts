/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ContactDto, ContactProjection, CreateContactOptions, PageContactProjection } from '../models';
export interface CreateContactRequest {
    createContactOptions: CreateContactOptions;
}
export interface DeleteContactRequest {
    contactId: string;
}
export interface GetAllContactsRequest {
    page?: number;
    size?: number;
    sort?: GetAllContactsSortEnum;
    since?: Date;
    before?: Date;
}
export interface GetContactRequest {
    contactId: string;
}
export interface GetContactVCardRequest {
    contactId: string;
}
/**
 *
 */
export declare class ContactControllerApi extends runtime.BaseAPI {
    /**
     * Create a contact
     */
    createContactRaw(requestParameters: CreateContactRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContactDto>>;
    /**
     * Create a contact
     */
    createContact(requestParameters: CreateContactRequest, initOverrides?: RequestInit): Promise<ContactDto>;
    /**
     * Delete contact
     */
    deleteContactRaw(requestParameters: DeleteContactRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete contact
     */
    deleteContact(requestParameters: DeleteContactRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Get all contacts
     */
    getAllContactsRaw(requestParameters: GetAllContactsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PageContactProjection>>;
    /**
     * Get all contacts
     */
    getAllContacts(requestParameters: GetAllContactsRequest, initOverrides?: RequestInit): Promise<PageContactProjection>;
    /**
     * Get contact
     */
    getContactRaw(requestParameters: GetContactRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ContactDto>>;
    /**
     * Get contact
     */
    getContact(requestParameters: GetContactRequest, initOverrides?: RequestInit): Promise<ContactDto>;
    /**
     * Get contact vCard vcf file
     */
    getContactVCardRaw(requestParameters: GetContactVCardRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * Get contact vCard vcf file
     */
    getContactVCard(requestParameters: GetContactVCardRequest, initOverrides?: RequestInit): Promise<Array<string>>;
    /**
     * Get all contacts
     */
    getContactsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ContactProjection>>>;
    /**
     * Get all contacts
     */
    getContacts(initOverrides?: RequestInit): Promise<Array<ContactProjection>>;
}
/**
 * @export
 * @enum {string}
 */
export declare enum GetAllContactsSortEnum {
    ASC = "ASC",
    DESC = "DESC"
}
