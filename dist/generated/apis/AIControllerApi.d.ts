/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { GenerateStructuredContentAttachmentOptions, GenerateStructuredContentEmailOptions, StructuredContentResult, StructuredOutputSchema, StructuredOutputSchemaValidation } from '../models';
export interface GenerateStructuredContentFromAttachmentRequest {
    generateStructuredContentAttachmentOptions: GenerateStructuredContentAttachmentOptions;
}
export interface GenerateStructuredContentFromEmailRequest {
    generateStructuredContentEmailOptions: GenerateStructuredContentEmailOptions;
}
export interface ValidateStructuredOutputSchemaRequest {
    structuredOutputSchema: StructuredOutputSchema;
}
/**
 *
 */
export declare class AIControllerApi extends runtime.BaseAPI {
    /**
     * Use output schemas to extract data from an attachment using AI
     * Generate structured content for an attachment
     */
    generateStructuredContentFromAttachmentRaw(requestParameters: GenerateStructuredContentFromAttachmentRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<StructuredContentResult>>;
    /**
     * Use output schemas to extract data from an attachment using AI
     * Generate structured content for an attachment
     */
    generateStructuredContentFromAttachment(requestParameters: GenerateStructuredContentFromAttachmentRequest, initOverrides?: RequestInit): Promise<StructuredContentResult>;
    /**
     * Use output schemas to extract data from an email using AI
     * Generate structured content for an email
     */
    generateStructuredContentFromEmailRaw(requestParameters: GenerateStructuredContentFromEmailRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<StructuredContentResult>>;
    /**
     * Use output schemas to extract data from an email using AI
     * Generate structured content for an email
     */
    generateStructuredContentFromEmail(requestParameters: GenerateStructuredContentFromEmailRequest, initOverrides?: RequestInit): Promise<StructuredContentResult>;
    /**
     * Check if a schema is valid and can be used to extract data using AI
     * Validate structured content schema
     */
    validateStructuredOutputSchemaRaw(requestParameters: ValidateStructuredOutputSchemaRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<StructuredOutputSchemaValidation>>;
    /**
     * Check if a schema is valid and can be used to extract data using AI
     * Validate structured content schema
     */
    validateStructuredOutputSchema(requestParameters: ValidateStructuredOutputSchemaRequest, initOverrides?: RequestInit): Promise<StructuredOutputSchemaValidation>;
}
